// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesos/module/module.proto

#ifndef PROTOBUF_mesos_2fmodule_2fmodule_2eproto__INCLUDED
#define PROTOBUF_mesos_2fmodule_2fmodule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mesos/mesos.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_mesos_2fmodule_2fmodule_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsModules_Library_ModuleImpl();
void InitDefaultsModules_Library_Module();
void InitDefaultsModules_LibraryImpl();
void InitDefaultsModules_Library();
void InitDefaultsModulesImpl();
void InitDefaultsModules();
inline void InitDefaults() {
  InitDefaultsModules_Library_Module();
  InitDefaultsModules_Library();
  InitDefaultsModules();
}
}  // namespace protobuf_mesos_2fmodule_2fmodule_2eproto
namespace mesos {
class Modules;
class ModulesDefaultTypeInternal;
extern ModulesDefaultTypeInternal _Modules_default_instance_;
class Modules_Library;
class Modules_LibraryDefaultTypeInternal;
extern Modules_LibraryDefaultTypeInternal _Modules_Library_default_instance_;
class Modules_Library_Module;
class Modules_Library_ModuleDefaultTypeInternal;
extern Modules_Library_ModuleDefaultTypeInternal _Modules_Library_Module_default_instance_;
}  // namespace mesos
namespace mesos {

// ===================================================================

class Modules_Library_Module : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mesos.Modules.Library.Module) */ {
 public:
  Modules_Library_Module();
  virtual ~Modules_Library_Module();

  Modules_Library_Module(const Modules_Library_Module& from);

  inline Modules_Library_Module& operator=(const Modules_Library_Module& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Modules_Library_Module(Modules_Library_Module&& from) noexcept
    : Modules_Library_Module() {
    *this = ::std::move(from);
  }

  inline Modules_Library_Module& operator=(Modules_Library_Module&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Modules_Library_Module& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Modules_Library_Module* internal_default_instance() {
    return reinterpret_cast<const Modules_Library_Module*>(
               &_Modules_Library_Module_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Modules_Library_Module* other);
  friend void swap(Modules_Library_Module& a, Modules_Library_Module& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Modules_Library_Module* New() const PROTOBUF_FINAL { return New(NULL); }

  Modules_Library_Module* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Modules_Library_Module& from);
  void MergeFrom(const Modules_Library_Module& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Modules_Library_Module* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mesos.Parameter parameters = 2;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 2;
  const ::mesos::Parameter& parameters(int index) const;
  ::mesos::Parameter* mutable_parameters(int index);
  ::mesos::Parameter* add_parameters();
  ::google::protobuf::RepeatedPtrField< ::mesos::Parameter >*
      mutable_parameters();
  const ::google::protobuf::RepeatedPtrField< ::mesos::Parameter >&
      parameters() const;

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:mesos.Modules.Library.Module)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mesos::Parameter > parameters_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct ::protobuf_mesos_2fmodule_2fmodule_2eproto::TableStruct;
  friend void ::protobuf_mesos_2fmodule_2fmodule_2eproto::InitDefaultsModules_Library_ModuleImpl();
};
// -------------------------------------------------------------------

class Modules_Library : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mesos.Modules.Library) */ {
 public:
  Modules_Library();
  virtual ~Modules_Library();

  Modules_Library(const Modules_Library& from);

  inline Modules_Library& operator=(const Modules_Library& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Modules_Library(Modules_Library&& from) noexcept
    : Modules_Library() {
    *this = ::std::move(from);
  }

  inline Modules_Library& operator=(Modules_Library&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Modules_Library& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Modules_Library* internal_default_instance() {
    return reinterpret_cast<const Modules_Library*>(
               &_Modules_Library_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Modules_Library* other);
  friend void swap(Modules_Library& a, Modules_Library& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Modules_Library* New() const PROTOBUF_FINAL { return New(NULL); }

  Modules_Library* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Modules_Library& from);
  void MergeFrom(const Modules_Library& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Modules_Library* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Modules_Library_Module Module;

  // accessors -------------------------------------------------------

  // repeated .mesos.Modules.Library.Module modules = 3;
  int modules_size() const;
  void clear_modules();
  static const int kModulesFieldNumber = 3;
  const ::mesos::Modules_Library_Module& modules(int index) const;
  ::mesos::Modules_Library_Module* mutable_modules(int index);
  ::mesos::Modules_Library_Module* add_modules();
  ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library_Module >*
      mutable_modules();
  const ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library_Module >&
      modules() const;

  // optional string file = 1;
  bool has_file() const;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:mesos.Modules.Library)
 private:
  void set_has_file();
  void clear_has_file();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library_Module > modules_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct ::protobuf_mesos_2fmodule_2fmodule_2eproto::TableStruct;
  friend void ::protobuf_mesos_2fmodule_2fmodule_2eproto::InitDefaultsModules_LibraryImpl();
};
// -------------------------------------------------------------------

class Modules : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mesos.Modules) */ {
 public:
  Modules();
  virtual ~Modules();

  Modules(const Modules& from);

  inline Modules& operator=(const Modules& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Modules(Modules&& from) noexcept
    : Modules() {
    *this = ::std::move(from);
  }

  inline Modules& operator=(Modules&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Modules& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Modules* internal_default_instance() {
    return reinterpret_cast<const Modules*>(
               &_Modules_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Modules* other);
  friend void swap(Modules& a, Modules& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Modules* New() const PROTOBUF_FINAL { return New(NULL); }

  Modules* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Modules& from);
  void MergeFrom(const Modules& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Modules* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Modules_Library Library;

  // accessors -------------------------------------------------------

  // repeated .mesos.Modules.Library libraries = 1;
  int libraries_size() const;
  void clear_libraries();
  static const int kLibrariesFieldNumber = 1;
  const ::mesos::Modules_Library& libraries(int index) const;
  ::mesos::Modules_Library* mutable_libraries(int index);
  ::mesos::Modules_Library* add_libraries();
  ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library >*
      mutable_libraries();
  const ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library >&
      libraries() const;

  // @@protoc_insertion_point(class_scope:mesos.Modules)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library > libraries_;
  friend struct ::protobuf_mesos_2fmodule_2fmodule_2eproto::TableStruct;
  friend void ::protobuf_mesos_2fmodule_2fmodule_2eproto::InitDefaultsModulesImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Modules_Library_Module

// optional string name = 1;
inline bool Modules_Library_Module::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Modules_Library_Module::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Modules_Library_Module::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Modules_Library_Module::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Modules_Library_Module::name() const {
  // @@protoc_insertion_point(field_get:mesos.Modules.Library.Module.name)
  return name_.GetNoArena();
}
inline void Modules_Library_Module::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mesos.Modules.Library.Module.name)
}
#if LANG_CXX11
inline void Modules_Library_Module::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mesos.Modules.Library.Module.name)
}
#endif
inline void Modules_Library_Module::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mesos.Modules.Library.Module.name)
}
inline void Modules_Library_Module::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mesos.Modules.Library.Module.name)
}
inline ::std::string* Modules_Library_Module::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:mesos.Modules.Library.Module.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Modules_Library_Module::release_name() {
  // @@protoc_insertion_point(field_release:mesos.Modules.Library.Module.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Modules_Library_Module::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mesos.Modules.Library.Module.name)
}

// repeated .mesos.Parameter parameters = 2;
inline int Modules_Library_Module::parameters_size() const {
  return parameters_.size();
}
inline const ::mesos::Parameter& Modules_Library_Module::parameters(int index) const {
  // @@protoc_insertion_point(field_get:mesos.Modules.Library.Module.parameters)
  return parameters_.Get(index);
}
inline ::mesos::Parameter* Modules_Library_Module::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:mesos.Modules.Library.Module.parameters)
  return parameters_.Mutable(index);
}
inline ::mesos::Parameter* Modules_Library_Module::add_parameters() {
  // @@protoc_insertion_point(field_add:mesos.Modules.Library.Module.parameters)
  return parameters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mesos::Parameter >*
Modules_Library_Module::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:mesos.Modules.Library.Module.parameters)
  return &parameters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mesos::Parameter >&
Modules_Library_Module::parameters() const {
  // @@protoc_insertion_point(field_list:mesos.Modules.Library.Module.parameters)
  return parameters_;
}

// -------------------------------------------------------------------

// Modules_Library

// optional string file = 1;
inline bool Modules_Library::has_file() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Modules_Library::set_has_file() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Modules_Library::clear_has_file() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Modules_Library::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file();
}
inline const ::std::string& Modules_Library::file() const {
  // @@protoc_insertion_point(field_get:mesos.Modules.Library.file)
  return file_.GetNoArena();
}
inline void Modules_Library::set_file(const ::std::string& value) {
  set_has_file();
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mesos.Modules.Library.file)
}
#if LANG_CXX11
inline void Modules_Library::set_file(::std::string&& value) {
  set_has_file();
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mesos.Modules.Library.file)
}
#endif
inline void Modules_Library::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file();
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mesos.Modules.Library.file)
}
inline void Modules_Library::set_file(const char* value, size_t size) {
  set_has_file();
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mesos.Modules.Library.file)
}
inline ::std::string* Modules_Library::mutable_file() {
  set_has_file();
  // @@protoc_insertion_point(field_mutable:mesos.Modules.Library.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Modules_Library::release_file() {
  // @@protoc_insertion_point(field_release:mesos.Modules.Library.file)
  clear_has_file();
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Modules_Library::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    set_has_file();
  } else {
    clear_has_file();
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:mesos.Modules.Library.file)
}

// optional string name = 2;
inline bool Modules_Library::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Modules_Library::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Modules_Library::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Modules_Library::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Modules_Library::name() const {
  // @@protoc_insertion_point(field_get:mesos.Modules.Library.name)
  return name_.GetNoArena();
}
inline void Modules_Library::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mesos.Modules.Library.name)
}
#if LANG_CXX11
inline void Modules_Library::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mesos.Modules.Library.name)
}
#endif
inline void Modules_Library::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mesos.Modules.Library.name)
}
inline void Modules_Library::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mesos.Modules.Library.name)
}
inline ::std::string* Modules_Library::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:mesos.Modules.Library.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Modules_Library::release_name() {
  // @@protoc_insertion_point(field_release:mesos.Modules.Library.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Modules_Library::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mesos.Modules.Library.name)
}

// repeated .mesos.Modules.Library.Module modules = 3;
inline int Modules_Library::modules_size() const {
  return modules_.size();
}
inline void Modules_Library::clear_modules() {
  modules_.Clear();
}
inline const ::mesos::Modules_Library_Module& Modules_Library::modules(int index) const {
  // @@protoc_insertion_point(field_get:mesos.Modules.Library.modules)
  return modules_.Get(index);
}
inline ::mesos::Modules_Library_Module* Modules_Library::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:mesos.Modules.Library.modules)
  return modules_.Mutable(index);
}
inline ::mesos::Modules_Library_Module* Modules_Library::add_modules() {
  // @@protoc_insertion_point(field_add:mesos.Modules.Library.modules)
  return modules_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library_Module >*
Modules_Library::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:mesos.Modules.Library.modules)
  return &modules_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library_Module >&
Modules_Library::modules() const {
  // @@protoc_insertion_point(field_list:mesos.Modules.Library.modules)
  return modules_;
}

// -------------------------------------------------------------------

// Modules

// repeated .mesos.Modules.Library libraries = 1;
inline int Modules::libraries_size() const {
  return libraries_.size();
}
inline void Modules::clear_libraries() {
  libraries_.Clear();
}
inline const ::mesos::Modules_Library& Modules::libraries(int index) const {
  // @@protoc_insertion_point(field_get:mesos.Modules.libraries)
  return libraries_.Get(index);
}
inline ::mesos::Modules_Library* Modules::mutable_libraries(int index) {
  // @@protoc_insertion_point(field_mutable:mesos.Modules.libraries)
  return libraries_.Mutable(index);
}
inline ::mesos::Modules_Library* Modules::add_libraries() {
  // @@protoc_insertion_point(field_add:mesos.Modules.libraries)
  return libraries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library >*
Modules::mutable_libraries() {
  // @@protoc_insertion_point(field_mutable_list:mesos.Modules.libraries)
  return &libraries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mesos::Modules_Library >&
Modules::libraries() const {
  // @@protoc_insertion_point(field_list:mesos.Modules.libraries)
  return libraries_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mesos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mesos_2fmodule_2fmodule_2eproto__INCLUDED
