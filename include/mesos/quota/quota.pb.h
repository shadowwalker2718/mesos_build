// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesos/quota/quota.proto

#ifndef PROTOBUF_mesos_2fquota_2fquota_2eproto__INCLUDED
#define PROTOBUF_mesos_2fquota_2fquota_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mesos/mesos.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_mesos_2fquota_2fquota_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsQuotaInfoImpl();
void InitDefaultsQuotaInfo();
void InitDefaultsQuotaRequestImpl();
void InitDefaultsQuotaRequest();
void InitDefaultsQuotaStatusImpl();
void InitDefaultsQuotaStatus();
inline void InitDefaults() {
  InitDefaultsQuotaInfo();
  InitDefaultsQuotaRequest();
  InitDefaultsQuotaStatus();
}
}  // namespace protobuf_mesos_2fquota_2fquota_2eproto
namespace mesos {
namespace quota {
class QuotaInfo;
class QuotaInfoDefaultTypeInternal;
extern QuotaInfoDefaultTypeInternal _QuotaInfo_default_instance_;
class QuotaRequest;
class QuotaRequestDefaultTypeInternal;
extern QuotaRequestDefaultTypeInternal _QuotaRequest_default_instance_;
class QuotaStatus;
class QuotaStatusDefaultTypeInternal;
extern QuotaStatusDefaultTypeInternal _QuotaStatus_default_instance_;
}  // namespace quota
}  // namespace mesos
namespace mesos {
namespace quota {

// ===================================================================

class QuotaInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mesos.quota.QuotaInfo) */ {
 public:
  QuotaInfo();
  virtual ~QuotaInfo();

  QuotaInfo(const QuotaInfo& from);

  inline QuotaInfo& operator=(const QuotaInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuotaInfo(QuotaInfo&& from) noexcept
    : QuotaInfo() {
    *this = ::std::move(from);
  }

  inline QuotaInfo& operator=(QuotaInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuotaInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuotaInfo* internal_default_instance() {
    return reinterpret_cast<const QuotaInfo*>(
               &_QuotaInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(QuotaInfo* other);
  friend void swap(QuotaInfo& a, QuotaInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuotaInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  QuotaInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuotaInfo& from);
  void MergeFrom(const QuotaInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuotaInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mesos.Resource guarantee = 3;
  int guarantee_size() const;
  void clear_guarantee();
  static const int kGuaranteeFieldNumber = 3;
  const ::mesos::Resource& guarantee(int index) const;
  ::mesos::Resource* mutable_guarantee(int index);
  ::mesos::Resource* add_guarantee();
  ::google::protobuf::RepeatedPtrField< ::mesos::Resource >*
      mutable_guarantee();
  const ::google::protobuf::RepeatedPtrField< ::mesos::Resource >&
      guarantee() const;

  // optional string role = 1;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  #if LANG_CXX11
  void set_role(::std::string&& value);
  #endif
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);

  // optional string principal = 2;
  bool has_principal() const;
  void clear_principal();
  static const int kPrincipalFieldNumber = 2;
  const ::std::string& principal() const;
  void set_principal(const ::std::string& value);
  #if LANG_CXX11
  void set_principal(::std::string&& value);
  #endif
  void set_principal(const char* value);
  void set_principal(const char* value, size_t size);
  ::std::string* mutable_principal();
  ::std::string* release_principal();
  void set_allocated_principal(::std::string* principal);

  // @@protoc_insertion_point(class_scope:mesos.quota.QuotaInfo)
 private:
  void set_has_role();
  void clear_has_role();
  void set_has_principal();
  void clear_has_principal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mesos::Resource > guarantee_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  ::google::protobuf::internal::ArenaStringPtr principal_;
  friend struct ::protobuf_mesos_2fquota_2fquota_2eproto::TableStruct;
  friend void ::protobuf_mesos_2fquota_2fquota_2eproto::InitDefaultsQuotaInfoImpl();
};
// -------------------------------------------------------------------

class QuotaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mesos.quota.QuotaRequest) */ {
 public:
  QuotaRequest();
  virtual ~QuotaRequest();

  QuotaRequest(const QuotaRequest& from);

  inline QuotaRequest& operator=(const QuotaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuotaRequest(QuotaRequest&& from) noexcept
    : QuotaRequest() {
    *this = ::std::move(from);
  }

  inline QuotaRequest& operator=(QuotaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuotaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuotaRequest* internal_default_instance() {
    return reinterpret_cast<const QuotaRequest*>(
               &_QuotaRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(QuotaRequest* other);
  friend void swap(QuotaRequest& a, QuotaRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuotaRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  QuotaRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuotaRequest& from);
  void MergeFrom(const QuotaRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuotaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mesos.Resource guarantee = 3;
  int guarantee_size() const;
  void clear_guarantee();
  static const int kGuaranteeFieldNumber = 3;
  const ::mesos::Resource& guarantee(int index) const;
  ::mesos::Resource* mutable_guarantee(int index);
  ::mesos::Resource* add_guarantee();
  ::google::protobuf::RepeatedPtrField< ::mesos::Resource >*
      mutable_guarantee();
  const ::google::protobuf::RepeatedPtrField< ::mesos::Resource >&
      guarantee() const;

  // optional string role = 2;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 2;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  #if LANG_CXX11
  void set_role(::std::string&& value);
  #endif
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);

  // optional bool force = 1 [default = false];
  bool has_force() const;
  void clear_force();
  static const int kForceFieldNumber = 1;
  bool force() const;
  void set_force(bool value);

  // @@protoc_insertion_point(class_scope:mesos.quota.QuotaRequest)
 private:
  void set_has_force();
  void clear_has_force();
  void set_has_role();
  void clear_has_role();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mesos::Resource > guarantee_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  bool force_;
  friend struct ::protobuf_mesos_2fquota_2fquota_2eproto::TableStruct;
  friend void ::protobuf_mesos_2fquota_2fquota_2eproto::InitDefaultsQuotaRequestImpl();
};
// -------------------------------------------------------------------

class QuotaStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mesos.quota.QuotaStatus) */ {
 public:
  QuotaStatus();
  virtual ~QuotaStatus();

  QuotaStatus(const QuotaStatus& from);

  inline QuotaStatus& operator=(const QuotaStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuotaStatus(QuotaStatus&& from) noexcept
    : QuotaStatus() {
    *this = ::std::move(from);
  }

  inline QuotaStatus& operator=(QuotaStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuotaStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuotaStatus* internal_default_instance() {
    return reinterpret_cast<const QuotaStatus*>(
               &_QuotaStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(QuotaStatus* other);
  friend void swap(QuotaStatus& a, QuotaStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuotaStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  QuotaStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuotaStatus& from);
  void MergeFrom(const QuotaStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuotaStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mesos.quota.QuotaInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  const ::mesos::quota::QuotaInfo& infos(int index) const;
  ::mesos::quota::QuotaInfo* mutable_infos(int index);
  ::mesos::quota::QuotaInfo* add_infos();
  ::google::protobuf::RepeatedPtrField< ::mesos::quota::QuotaInfo >*
      mutable_infos();
  const ::google::protobuf::RepeatedPtrField< ::mesos::quota::QuotaInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:mesos.quota.QuotaStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mesos::quota::QuotaInfo > infos_;
  friend struct ::protobuf_mesos_2fquota_2fquota_2eproto::TableStruct;
  friend void ::protobuf_mesos_2fquota_2fquota_2eproto::InitDefaultsQuotaStatusImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QuotaInfo

// optional string role = 1;
inline bool QuotaInfo::has_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuotaInfo::set_has_role() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuotaInfo::clear_has_role() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuotaInfo::clear_role() {
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_role();
}
inline const ::std::string& QuotaInfo::role() const {
  // @@protoc_insertion_point(field_get:mesos.quota.QuotaInfo.role)
  return role_.GetNoArena();
}
inline void QuotaInfo::set_role(const ::std::string& value) {
  set_has_role();
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mesos.quota.QuotaInfo.role)
}
#if LANG_CXX11
inline void QuotaInfo::set_role(::std::string&& value) {
  set_has_role();
  role_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mesos.quota.QuotaInfo.role)
}
#endif
inline void QuotaInfo::set_role(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_role();
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mesos.quota.QuotaInfo.role)
}
inline void QuotaInfo::set_role(const char* value, size_t size) {
  set_has_role();
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mesos.quota.QuotaInfo.role)
}
inline ::std::string* QuotaInfo::mutable_role() {
  set_has_role();
  // @@protoc_insertion_point(field_mutable:mesos.quota.QuotaInfo.role)
  return role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuotaInfo::release_role() {
  // @@protoc_insertion_point(field_release:mesos.quota.QuotaInfo.role)
  clear_has_role();
  return role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuotaInfo::set_allocated_role(::std::string* role) {
  if (role != NULL) {
    set_has_role();
  } else {
    clear_has_role();
  }
  role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:mesos.quota.QuotaInfo.role)
}

// optional string principal = 2;
inline bool QuotaInfo::has_principal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuotaInfo::set_has_principal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuotaInfo::clear_has_principal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuotaInfo::clear_principal() {
  principal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_principal();
}
inline const ::std::string& QuotaInfo::principal() const {
  // @@protoc_insertion_point(field_get:mesos.quota.QuotaInfo.principal)
  return principal_.GetNoArena();
}
inline void QuotaInfo::set_principal(const ::std::string& value) {
  set_has_principal();
  principal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mesos.quota.QuotaInfo.principal)
}
#if LANG_CXX11
inline void QuotaInfo::set_principal(::std::string&& value) {
  set_has_principal();
  principal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mesos.quota.QuotaInfo.principal)
}
#endif
inline void QuotaInfo::set_principal(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_principal();
  principal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mesos.quota.QuotaInfo.principal)
}
inline void QuotaInfo::set_principal(const char* value, size_t size) {
  set_has_principal();
  principal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mesos.quota.QuotaInfo.principal)
}
inline ::std::string* QuotaInfo::mutable_principal() {
  set_has_principal();
  // @@protoc_insertion_point(field_mutable:mesos.quota.QuotaInfo.principal)
  return principal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuotaInfo::release_principal() {
  // @@protoc_insertion_point(field_release:mesos.quota.QuotaInfo.principal)
  clear_has_principal();
  return principal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuotaInfo::set_allocated_principal(::std::string* principal) {
  if (principal != NULL) {
    set_has_principal();
  } else {
    clear_has_principal();
  }
  principal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), principal);
  // @@protoc_insertion_point(field_set_allocated:mesos.quota.QuotaInfo.principal)
}

// repeated .mesos.Resource guarantee = 3;
inline int QuotaInfo::guarantee_size() const {
  return guarantee_.size();
}
inline const ::mesos::Resource& QuotaInfo::guarantee(int index) const {
  // @@protoc_insertion_point(field_get:mesos.quota.QuotaInfo.guarantee)
  return guarantee_.Get(index);
}
inline ::mesos::Resource* QuotaInfo::mutable_guarantee(int index) {
  // @@protoc_insertion_point(field_mutable:mesos.quota.QuotaInfo.guarantee)
  return guarantee_.Mutable(index);
}
inline ::mesos::Resource* QuotaInfo::add_guarantee() {
  // @@protoc_insertion_point(field_add:mesos.quota.QuotaInfo.guarantee)
  return guarantee_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mesos::Resource >*
QuotaInfo::mutable_guarantee() {
  // @@protoc_insertion_point(field_mutable_list:mesos.quota.QuotaInfo.guarantee)
  return &guarantee_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mesos::Resource >&
QuotaInfo::guarantee() const {
  // @@protoc_insertion_point(field_list:mesos.quota.QuotaInfo.guarantee)
  return guarantee_;
}

// -------------------------------------------------------------------

// QuotaRequest

// optional bool force = 1 [default = false];
inline bool QuotaRequest::has_force() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuotaRequest::set_has_force() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuotaRequest::clear_has_force() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuotaRequest::clear_force() {
  force_ = false;
  clear_has_force();
}
inline bool QuotaRequest::force() const {
  // @@protoc_insertion_point(field_get:mesos.quota.QuotaRequest.force)
  return force_;
}
inline void QuotaRequest::set_force(bool value) {
  set_has_force();
  force_ = value;
  // @@protoc_insertion_point(field_set:mesos.quota.QuotaRequest.force)
}

// optional string role = 2;
inline bool QuotaRequest::has_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuotaRequest::set_has_role() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuotaRequest::clear_has_role() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuotaRequest::clear_role() {
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_role();
}
inline const ::std::string& QuotaRequest::role() const {
  // @@protoc_insertion_point(field_get:mesos.quota.QuotaRequest.role)
  return role_.GetNoArena();
}
inline void QuotaRequest::set_role(const ::std::string& value) {
  set_has_role();
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mesos.quota.QuotaRequest.role)
}
#if LANG_CXX11
inline void QuotaRequest::set_role(::std::string&& value) {
  set_has_role();
  role_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mesos.quota.QuotaRequest.role)
}
#endif
inline void QuotaRequest::set_role(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_role();
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mesos.quota.QuotaRequest.role)
}
inline void QuotaRequest::set_role(const char* value, size_t size) {
  set_has_role();
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mesos.quota.QuotaRequest.role)
}
inline ::std::string* QuotaRequest::mutable_role() {
  set_has_role();
  // @@protoc_insertion_point(field_mutable:mesos.quota.QuotaRequest.role)
  return role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuotaRequest::release_role() {
  // @@protoc_insertion_point(field_release:mesos.quota.QuotaRequest.role)
  clear_has_role();
  return role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuotaRequest::set_allocated_role(::std::string* role) {
  if (role != NULL) {
    set_has_role();
  } else {
    clear_has_role();
  }
  role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:mesos.quota.QuotaRequest.role)
}

// repeated .mesos.Resource guarantee = 3;
inline int QuotaRequest::guarantee_size() const {
  return guarantee_.size();
}
inline const ::mesos::Resource& QuotaRequest::guarantee(int index) const {
  // @@protoc_insertion_point(field_get:mesos.quota.QuotaRequest.guarantee)
  return guarantee_.Get(index);
}
inline ::mesos::Resource* QuotaRequest::mutable_guarantee(int index) {
  // @@protoc_insertion_point(field_mutable:mesos.quota.QuotaRequest.guarantee)
  return guarantee_.Mutable(index);
}
inline ::mesos::Resource* QuotaRequest::add_guarantee() {
  // @@protoc_insertion_point(field_add:mesos.quota.QuotaRequest.guarantee)
  return guarantee_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mesos::Resource >*
QuotaRequest::mutable_guarantee() {
  // @@protoc_insertion_point(field_mutable_list:mesos.quota.QuotaRequest.guarantee)
  return &guarantee_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mesos::Resource >&
QuotaRequest::guarantee() const {
  // @@protoc_insertion_point(field_list:mesos.quota.QuotaRequest.guarantee)
  return guarantee_;
}

// -------------------------------------------------------------------

// QuotaStatus

// repeated .mesos.quota.QuotaInfo infos = 1;
inline int QuotaStatus::infos_size() const {
  return infos_.size();
}
inline void QuotaStatus::clear_infos() {
  infos_.Clear();
}
inline const ::mesos::quota::QuotaInfo& QuotaStatus::infos(int index) const {
  // @@protoc_insertion_point(field_get:mesos.quota.QuotaStatus.infos)
  return infos_.Get(index);
}
inline ::mesos::quota::QuotaInfo* QuotaStatus::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:mesos.quota.QuotaStatus.infos)
  return infos_.Mutable(index);
}
inline ::mesos::quota::QuotaInfo* QuotaStatus::add_infos() {
  // @@protoc_insertion_point(field_add:mesos.quota.QuotaStatus.infos)
  return infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mesos::quota::QuotaInfo >*
QuotaStatus::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:mesos.quota.QuotaStatus.infos)
  return &infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mesos::quota::QuotaInfo >&
QuotaStatus::infos() const {
  // @@protoc_insertion_point(field_list:mesos.quota.QuotaStatus.infos)
  return infos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace quota
}  // namespace mesos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mesos_2fquota_2fquota_2eproto__INCLUDED
