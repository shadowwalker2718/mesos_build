// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesos/oci/spec.proto

#ifndef PROTOBUF_mesos_2foci_2fspec_2eproto__INCLUDED
#define PROTOBUF_mesos_2foci_2fspec_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_mesos_2foci_2fspec_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[17];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDescriptor_AnnotationsEntry_DoNotUseImpl();
void InitDefaultsDescriptor_AnnotationsEntry_DoNotUse();
void InitDefaultsDescriptorImpl();
void InitDefaultsDescriptor();
void InitDefaultsPlatformImpl();
void InitDefaultsPlatform();
void InitDefaultsManifestDescriptor_AnnotationsEntry_DoNotUseImpl();
void InitDefaultsManifestDescriptor_AnnotationsEntry_DoNotUse();
void InitDefaultsManifestDescriptorImpl();
void InitDefaultsManifestDescriptor();
void InitDefaultsIndex_AnnotationsEntry_DoNotUseImpl();
void InitDefaultsIndex_AnnotationsEntry_DoNotUse();
void InitDefaultsIndexImpl();
void InitDefaultsIndex();
void InitDefaultsManifest_AnnotationsEntry_DoNotUseImpl();
void InitDefaultsManifest_AnnotationsEntry_DoNotUse();
void InitDefaultsManifestImpl();
void InitDefaultsManifest();
void InitDefaultsConfiguration_RootfsImpl();
void InitDefaultsConfiguration_Rootfs();
void InitDefaultsConfiguration_Config_EmptyImpl();
void InitDefaultsConfiguration_Config_Empty();
void InitDefaultsConfiguration_Config_ExposedPortsEntry_DoNotUseImpl();
void InitDefaultsConfiguration_Config_ExposedPortsEntry_DoNotUse();
void InitDefaultsConfiguration_Config_VolumesEntry_DoNotUseImpl();
void InitDefaultsConfiguration_Config_VolumesEntry_DoNotUse();
void InitDefaultsConfiguration_Config_LabelsEntry_DoNotUseImpl();
void InitDefaultsConfiguration_Config_LabelsEntry_DoNotUse();
void InitDefaultsConfiguration_ConfigImpl();
void InitDefaultsConfiguration_Config();
void InitDefaultsConfiguration_HistoryImpl();
void InitDefaultsConfiguration_History();
void InitDefaultsConfigurationImpl();
void InitDefaultsConfiguration();
inline void InitDefaults() {
  InitDefaultsDescriptor_AnnotationsEntry_DoNotUse();
  InitDefaultsDescriptor();
  InitDefaultsPlatform();
  InitDefaultsManifestDescriptor_AnnotationsEntry_DoNotUse();
  InitDefaultsManifestDescriptor();
  InitDefaultsIndex_AnnotationsEntry_DoNotUse();
  InitDefaultsIndex();
  InitDefaultsManifest_AnnotationsEntry_DoNotUse();
  InitDefaultsManifest();
  InitDefaultsConfiguration_Rootfs();
  InitDefaultsConfiguration_Config_Empty();
  InitDefaultsConfiguration_Config_ExposedPortsEntry_DoNotUse();
  InitDefaultsConfiguration_Config_VolumesEntry_DoNotUse();
  InitDefaultsConfiguration_Config_LabelsEntry_DoNotUse();
  InitDefaultsConfiguration_Config();
  InitDefaultsConfiguration_History();
  InitDefaultsConfiguration();
}
}  // namespace protobuf_mesos_2foci_2fspec_2eproto
namespace oci {
namespace spec {
namespace image {
namespace v1 {
class Configuration;
class ConfigurationDefaultTypeInternal;
extern ConfigurationDefaultTypeInternal _Configuration_default_instance_;
class Configuration_Config;
class Configuration_ConfigDefaultTypeInternal;
extern Configuration_ConfigDefaultTypeInternal _Configuration_Config_default_instance_;
class Configuration_Config_Empty;
class Configuration_Config_EmptyDefaultTypeInternal;
extern Configuration_Config_EmptyDefaultTypeInternal _Configuration_Config_Empty_default_instance_;
class Configuration_Config_ExposedPortsEntry_DoNotUse;
class Configuration_Config_ExposedPortsEntry_DoNotUseDefaultTypeInternal;
extern Configuration_Config_ExposedPortsEntry_DoNotUseDefaultTypeInternal _Configuration_Config_ExposedPortsEntry_DoNotUse_default_instance_;
class Configuration_Config_LabelsEntry_DoNotUse;
class Configuration_Config_LabelsEntry_DoNotUseDefaultTypeInternal;
extern Configuration_Config_LabelsEntry_DoNotUseDefaultTypeInternal _Configuration_Config_LabelsEntry_DoNotUse_default_instance_;
class Configuration_Config_VolumesEntry_DoNotUse;
class Configuration_Config_VolumesEntry_DoNotUseDefaultTypeInternal;
extern Configuration_Config_VolumesEntry_DoNotUseDefaultTypeInternal _Configuration_Config_VolumesEntry_DoNotUse_default_instance_;
class Configuration_History;
class Configuration_HistoryDefaultTypeInternal;
extern Configuration_HistoryDefaultTypeInternal _Configuration_History_default_instance_;
class Configuration_Rootfs;
class Configuration_RootfsDefaultTypeInternal;
extern Configuration_RootfsDefaultTypeInternal _Configuration_Rootfs_default_instance_;
class Descriptor;
class DescriptorDefaultTypeInternal;
extern DescriptorDefaultTypeInternal _Descriptor_default_instance_;
class Descriptor_AnnotationsEntry_DoNotUse;
class Descriptor_AnnotationsEntry_DoNotUseDefaultTypeInternal;
extern Descriptor_AnnotationsEntry_DoNotUseDefaultTypeInternal _Descriptor_AnnotationsEntry_DoNotUse_default_instance_;
class Index;
class IndexDefaultTypeInternal;
extern IndexDefaultTypeInternal _Index_default_instance_;
class Index_AnnotationsEntry_DoNotUse;
class Index_AnnotationsEntry_DoNotUseDefaultTypeInternal;
extern Index_AnnotationsEntry_DoNotUseDefaultTypeInternal _Index_AnnotationsEntry_DoNotUse_default_instance_;
class Manifest;
class ManifestDefaultTypeInternal;
extern ManifestDefaultTypeInternal _Manifest_default_instance_;
class ManifestDescriptor;
class ManifestDescriptorDefaultTypeInternal;
extern ManifestDescriptorDefaultTypeInternal _ManifestDescriptor_default_instance_;
class ManifestDescriptor_AnnotationsEntry_DoNotUse;
class ManifestDescriptor_AnnotationsEntry_DoNotUseDefaultTypeInternal;
extern ManifestDescriptor_AnnotationsEntry_DoNotUseDefaultTypeInternal _ManifestDescriptor_AnnotationsEntry_DoNotUse_default_instance_;
class Manifest_AnnotationsEntry_DoNotUse;
class Manifest_AnnotationsEntry_DoNotUseDefaultTypeInternal;
extern Manifest_AnnotationsEntry_DoNotUseDefaultTypeInternal _Manifest_AnnotationsEntry_DoNotUse_default_instance_;
class Platform;
class PlatformDefaultTypeInternal;
extern PlatformDefaultTypeInternal _Platform_default_instance_;
}  // namespace v1
}  // namespace image
}  // namespace spec
}  // namespace oci
namespace oci {
namespace spec {
namespace image {
namespace v1 {

// ===================================================================

class Descriptor_AnnotationsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Descriptor_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Descriptor_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Descriptor_AnnotationsEntry_DoNotUse();
  Descriptor_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Descriptor_AnnotationsEntry_DoNotUse& other);
  static const Descriptor_AnnotationsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Descriptor_AnnotationsEntry_DoNotUse*>(&_Descriptor_AnnotationsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Descriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.Descriptor) */ {
 public:
  Descriptor();
  virtual ~Descriptor();

  Descriptor(const Descriptor& from);

  inline Descriptor& operator=(const Descriptor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Descriptor(Descriptor&& from) noexcept
    : Descriptor() {
    *this = ::std::move(from);
  }

  inline Descriptor& operator=(Descriptor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Descriptor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Descriptor* internal_default_instance() {
    return reinterpret_cast<const Descriptor*>(
               &_Descriptor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Descriptor* other);
  friend void swap(Descriptor& a, Descriptor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Descriptor* New() const PROTOBUF_FINAL { return New(NULL); }

  Descriptor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Descriptor& from);
  void MergeFrom(const Descriptor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Descriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string urls = 4;
  int urls_size() const;
  void clear_urls();
  static const int kUrlsFieldNumber = 4;
  const ::std::string& urls(int index) const;
  ::std::string* mutable_urls(int index);
  void set_urls(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_urls(int index, ::std::string&& value);
  #endif
  void set_urls(int index, const char* value);
  void set_urls(int index, const char* value, size_t size);
  ::std::string* add_urls();
  void add_urls(const ::std::string& value);
  #if LANG_CXX11
  void add_urls(::std::string&& value);
  #endif
  void add_urls(const char* value);
  void add_urls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& urls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_urls();

  // map<string, string> annotations = 5;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      annotations() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_annotations();

  // required string mediaType = 1;
  bool has_mediatype() const;
  void clear_mediatype();
  static const int kMediaTypeFieldNumber = 1;
  const ::std::string& mediatype() const;
  void set_mediatype(const ::std::string& value);
  #if LANG_CXX11
  void set_mediatype(::std::string&& value);
  #endif
  void set_mediatype(const char* value);
  void set_mediatype(const char* value, size_t size);
  ::std::string* mutable_mediatype();
  ::std::string* release_mediatype();
  void set_allocated_mediatype(::std::string* mediatype);

  // required string digest = 2;
  bool has_digest() const;
  void clear_digest();
  static const int kDigestFieldNumber = 2;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const char* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // required int64 size = 3;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.Descriptor)
 private:
  void set_has_mediatype();
  void clear_has_mediatype();
  void set_has_digest();
  void clear_has_digest();
  void set_has_size();
  void clear_has_size();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> urls_;
  ::google::protobuf::internal::MapField<
      Descriptor_AnnotationsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > annotations_;
  ::google::protobuf::internal::ArenaStringPtr mediatype_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  ::google::protobuf::int64 size_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsDescriptorImpl();
};
// -------------------------------------------------------------------

class Platform : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.Platform) */ {
 public:
  Platform();
  virtual ~Platform();

  Platform(const Platform& from);

  inline Platform& operator=(const Platform& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Platform(Platform&& from) noexcept
    : Platform() {
    *this = ::std::move(from);
  }

  inline Platform& operator=(Platform&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Platform& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Platform* internal_default_instance() {
    return reinterpret_cast<const Platform*>(
               &_Platform_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Platform* other);
  friend void swap(Platform& a, Platform& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Platform* New() const PROTOBUF_FINAL { return New(NULL); }

  Platform* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Platform& from);
  void MergeFrom(const Platform& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Platform* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string os_features = 4;
  int os_features_size() const;
  void clear_os_features();
  static const int kOsFeaturesFieldNumber = 4;
  const ::std::string& os_features(int index) const;
  ::std::string* mutable_os_features(int index);
  void set_os_features(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_os_features(int index, ::std::string&& value);
  #endif
  void set_os_features(int index, const char* value);
  void set_os_features(int index, const char* value, size_t size);
  ::std::string* add_os_features();
  void add_os_features(const ::std::string& value);
  #if LANG_CXX11
  void add_os_features(::std::string&& value);
  #endif
  void add_os_features(const char* value);
  void add_os_features(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& os_features() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_os_features();

  // repeated string features = 6;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 6;
  const ::std::string& features(int index) const;
  ::std::string* mutable_features(int index);
  void set_features(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_features(int index, ::std::string&& value);
  #endif
  void set_features(int index, const char* value);
  void set_features(int index, const char* value, size_t size);
  ::std::string* add_features();
  void add_features(const ::std::string& value);
  #if LANG_CXX11
  void add_features(::std::string&& value);
  #endif
  void add_features(const char* value);
  void add_features(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& features() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_features();

  // required string architecture = 1;
  bool has_architecture() const;
  void clear_architecture();
  static const int kArchitectureFieldNumber = 1;
  const ::std::string& architecture() const;
  void set_architecture(const ::std::string& value);
  #if LANG_CXX11
  void set_architecture(::std::string&& value);
  #endif
  void set_architecture(const char* value);
  void set_architecture(const char* value, size_t size);
  ::std::string* mutable_architecture();
  ::std::string* release_architecture();
  void set_allocated_architecture(::std::string* architecture);

  // required string os = 2;
  bool has_os() const;
  void clear_os();
  static const int kOsFieldNumber = 2;
  const ::std::string& os() const;
  void set_os(const ::std::string& value);
  #if LANG_CXX11
  void set_os(::std::string&& value);
  #endif
  void set_os(const char* value);
  void set_os(const char* value, size_t size);
  ::std::string* mutable_os();
  ::std::string* release_os();
  void set_allocated_os(::std::string* os);

  // optional string os_version = 3;
  bool has_os_version() const;
  void clear_os_version();
  static const int kOsVersionFieldNumber = 3;
  const ::std::string& os_version() const;
  void set_os_version(const ::std::string& value);
  #if LANG_CXX11
  void set_os_version(::std::string&& value);
  #endif
  void set_os_version(const char* value);
  void set_os_version(const char* value, size_t size);
  ::std::string* mutable_os_version();
  ::std::string* release_os_version();
  void set_allocated_os_version(::std::string* os_version);

  // optional string variant = 5;
  bool has_variant() const;
  void clear_variant();
  static const int kVariantFieldNumber = 5;
  const ::std::string& variant() const;
  void set_variant(const ::std::string& value);
  #if LANG_CXX11
  void set_variant(::std::string&& value);
  #endif
  void set_variant(const char* value);
  void set_variant(const char* value, size_t size);
  ::std::string* mutable_variant();
  ::std::string* release_variant();
  void set_allocated_variant(::std::string* variant);

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.Platform)
 private:
  void set_has_architecture();
  void clear_has_architecture();
  void set_has_os();
  void clear_has_os();
  void set_has_os_version();
  void clear_has_os_version();
  void set_has_variant();
  void clear_has_variant();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> os_features_;
  ::google::protobuf::RepeatedPtrField< ::std::string> features_;
  ::google::protobuf::internal::ArenaStringPtr architecture_;
  ::google::protobuf::internal::ArenaStringPtr os_;
  ::google::protobuf::internal::ArenaStringPtr os_version_;
  ::google::protobuf::internal::ArenaStringPtr variant_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsPlatformImpl();
};
// -------------------------------------------------------------------

class ManifestDescriptor_AnnotationsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ManifestDescriptor_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ManifestDescriptor_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ManifestDescriptor_AnnotationsEntry_DoNotUse();
  ManifestDescriptor_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ManifestDescriptor_AnnotationsEntry_DoNotUse& other);
  static const ManifestDescriptor_AnnotationsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ManifestDescriptor_AnnotationsEntry_DoNotUse*>(&_ManifestDescriptor_AnnotationsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ManifestDescriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.ManifestDescriptor) */ {
 public:
  ManifestDescriptor();
  virtual ~ManifestDescriptor();

  ManifestDescriptor(const ManifestDescriptor& from);

  inline ManifestDescriptor& operator=(const ManifestDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ManifestDescriptor(ManifestDescriptor&& from) noexcept
    : ManifestDescriptor() {
    *this = ::std::move(from);
  }

  inline ManifestDescriptor& operator=(ManifestDescriptor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManifestDescriptor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManifestDescriptor* internal_default_instance() {
    return reinterpret_cast<const ManifestDescriptor*>(
               &_ManifestDescriptor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ManifestDescriptor* other);
  friend void swap(ManifestDescriptor& a, ManifestDescriptor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ManifestDescriptor* New() const PROTOBUF_FINAL { return New(NULL); }

  ManifestDescriptor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManifestDescriptor& from);
  void MergeFrom(const ManifestDescriptor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManifestDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string urls = 5;
  int urls_size() const;
  void clear_urls();
  static const int kUrlsFieldNumber = 5;
  const ::std::string& urls(int index) const;
  ::std::string* mutable_urls(int index);
  void set_urls(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_urls(int index, ::std::string&& value);
  #endif
  void set_urls(int index, const char* value);
  void set_urls(int index, const char* value, size_t size);
  ::std::string* add_urls();
  void add_urls(const ::std::string& value);
  #if LANG_CXX11
  void add_urls(::std::string&& value);
  #endif
  void add_urls(const char* value);
  void add_urls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& urls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_urls();

  // map<string, string> annotations = 6;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      annotations() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_annotations();

  // required string mediaType = 1;
  bool has_mediatype() const;
  void clear_mediatype();
  static const int kMediaTypeFieldNumber = 1;
  const ::std::string& mediatype() const;
  void set_mediatype(const ::std::string& value);
  #if LANG_CXX11
  void set_mediatype(::std::string&& value);
  #endif
  void set_mediatype(const char* value);
  void set_mediatype(const char* value, size_t size);
  ::std::string* mutable_mediatype();
  ::std::string* release_mediatype();
  void set_allocated_mediatype(::std::string* mediatype);

  // required string digest = 2;
  bool has_digest() const;
  void clear_digest();
  static const int kDigestFieldNumber = 2;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const char* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // optional .oci.spec.image.v1.Platform platform = 4;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 4;
  const ::oci::spec::image::v1::Platform& platform() const;
  ::oci::spec::image::v1::Platform* release_platform();
  ::oci::spec::image::v1::Platform* mutable_platform();
  void set_allocated_platform(::oci::spec::image::v1::Platform* platform);

  // required int64 size = 3;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.ManifestDescriptor)
 private:
  void set_has_mediatype();
  void clear_has_mediatype();
  void set_has_digest();
  void clear_has_digest();
  void set_has_size();
  void clear_has_size();
  void set_has_platform();
  void clear_has_platform();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> urls_;
  ::google::protobuf::internal::MapField<
      ManifestDescriptor_AnnotationsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > annotations_;
  ::google::protobuf::internal::ArenaStringPtr mediatype_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  ::oci::spec::image::v1::Platform* platform_;
  ::google::protobuf::int64 size_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsManifestDescriptorImpl();
};
// -------------------------------------------------------------------

class Index_AnnotationsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Index_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Index_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Index_AnnotationsEntry_DoNotUse();
  Index_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Index_AnnotationsEntry_DoNotUse& other);
  static const Index_AnnotationsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Index_AnnotationsEntry_DoNotUse*>(&_Index_AnnotationsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Index : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.Index) */ {
 public:
  Index();
  virtual ~Index();

  Index(const Index& from);

  inline Index& operator=(const Index& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Index(Index&& from) noexcept
    : Index() {
    *this = ::std::move(from);
  }

  inline Index& operator=(Index&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Index& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Index* internal_default_instance() {
    return reinterpret_cast<const Index*>(
               &_Index_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Index* other);
  friend void swap(Index& a, Index& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Index* New() const PROTOBUF_FINAL { return New(NULL); }

  Index* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Index& from);
  void MergeFrom(const Index& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Index* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .oci.spec.image.v1.ManifestDescriptor manifests = 2;
  int manifests_size() const;
  void clear_manifests();
  static const int kManifestsFieldNumber = 2;
  const ::oci::spec::image::v1::ManifestDescriptor& manifests(int index) const;
  ::oci::spec::image::v1::ManifestDescriptor* mutable_manifests(int index);
  ::oci::spec::image::v1::ManifestDescriptor* add_manifests();
  ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::ManifestDescriptor >*
      mutable_manifests();
  const ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::ManifestDescriptor >&
      manifests() const;

  // map<string, string> annotations = 3;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      annotations() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_annotations();

  // required int64 schemaVersion = 1;
  bool has_schemaversion() const;
  void clear_schemaversion();
  static const int kSchemaVersionFieldNumber = 1;
  ::google::protobuf::int64 schemaversion() const;
  void set_schemaversion(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.Index)
 private:
  void set_has_schemaversion();
  void clear_has_schemaversion();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::ManifestDescriptor > manifests_;
  ::google::protobuf::internal::MapField<
      Index_AnnotationsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > annotations_;
  ::google::protobuf::int64 schemaversion_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsIndexImpl();
};
// -------------------------------------------------------------------

class Manifest_AnnotationsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Manifest_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Manifest_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Manifest_AnnotationsEntry_DoNotUse();
  Manifest_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Manifest_AnnotationsEntry_DoNotUse& other);
  static const Manifest_AnnotationsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Manifest_AnnotationsEntry_DoNotUse*>(&_Manifest_AnnotationsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Manifest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.Manifest) */ {
 public:
  Manifest();
  virtual ~Manifest();

  Manifest(const Manifest& from);

  inline Manifest& operator=(const Manifest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Manifest(Manifest&& from) noexcept
    : Manifest() {
    *this = ::std::move(from);
  }

  inline Manifest& operator=(Manifest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Manifest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Manifest* internal_default_instance() {
    return reinterpret_cast<const Manifest*>(
               &_Manifest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Manifest* other);
  friend void swap(Manifest& a, Manifest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Manifest* New() const PROTOBUF_FINAL { return New(NULL); }

  Manifest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Manifest& from);
  void MergeFrom(const Manifest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Manifest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .oci.spec.image.v1.Descriptor layers = 3;
  int layers_size() const;
  void clear_layers();
  static const int kLayersFieldNumber = 3;
  const ::oci::spec::image::v1::Descriptor& layers(int index) const;
  ::oci::spec::image::v1::Descriptor* mutable_layers(int index);
  ::oci::spec::image::v1::Descriptor* add_layers();
  ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Descriptor >*
      mutable_layers();
  const ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Descriptor >&
      layers() const;

  // map<string, string> annotations = 4;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      annotations() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_annotations();

  // required .oci.spec.image.v1.Descriptor config = 2;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  const ::oci::spec::image::v1::Descriptor& config() const;
  ::oci::spec::image::v1::Descriptor* release_config();
  ::oci::spec::image::v1::Descriptor* mutable_config();
  void set_allocated_config(::oci::spec::image::v1::Descriptor* config);

  // required int64 schemaVersion = 1;
  bool has_schemaversion() const;
  void clear_schemaversion();
  static const int kSchemaVersionFieldNumber = 1;
  ::google::protobuf::int64 schemaversion() const;
  void set_schemaversion(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.Manifest)
 private:
  void set_has_schemaversion();
  void clear_has_schemaversion();
  void set_has_config();
  void clear_has_config();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Descriptor > layers_;
  ::google::protobuf::internal::MapField<
      Manifest_AnnotationsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > annotations_;
  ::oci::spec::image::v1::Descriptor* config_;
  ::google::protobuf::int64 schemaversion_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsManifestImpl();
};
// -------------------------------------------------------------------

class Configuration_Rootfs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.Configuration.Rootfs) */ {
 public:
  Configuration_Rootfs();
  virtual ~Configuration_Rootfs();

  Configuration_Rootfs(const Configuration_Rootfs& from);

  inline Configuration_Rootfs& operator=(const Configuration_Rootfs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Configuration_Rootfs(Configuration_Rootfs&& from) noexcept
    : Configuration_Rootfs() {
    *this = ::std::move(from);
  }

  inline Configuration_Rootfs& operator=(Configuration_Rootfs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Configuration_Rootfs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Configuration_Rootfs* internal_default_instance() {
    return reinterpret_cast<const Configuration_Rootfs*>(
               &_Configuration_Rootfs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Configuration_Rootfs* other);
  friend void swap(Configuration_Rootfs& a, Configuration_Rootfs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Configuration_Rootfs* New() const PROTOBUF_FINAL { return New(NULL); }

  Configuration_Rootfs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Configuration_Rootfs& from);
  void MergeFrom(const Configuration_Rootfs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Configuration_Rootfs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string diff_ids = 2;
  int diff_ids_size() const;
  void clear_diff_ids();
  static const int kDiffIdsFieldNumber = 2;
  const ::std::string& diff_ids(int index) const;
  ::std::string* mutable_diff_ids(int index);
  void set_diff_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_diff_ids(int index, ::std::string&& value);
  #endif
  void set_diff_ids(int index, const char* value);
  void set_diff_ids(int index, const char* value, size_t size);
  ::std::string* add_diff_ids();
  void add_diff_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_diff_ids(::std::string&& value);
  #endif
  void add_diff_ids(const char* value);
  void add_diff_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& diff_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_diff_ids();

  // required string type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.Configuration.Rootfs)
 private:
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> diff_ids_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsConfiguration_RootfsImpl();
};
// -------------------------------------------------------------------

class Configuration_Config_Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.Configuration.Config.Empty) */ {
 public:
  Configuration_Config_Empty();
  virtual ~Configuration_Config_Empty();

  Configuration_Config_Empty(const Configuration_Config_Empty& from);

  inline Configuration_Config_Empty& operator=(const Configuration_Config_Empty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Configuration_Config_Empty(Configuration_Config_Empty&& from) noexcept
    : Configuration_Config_Empty() {
    *this = ::std::move(from);
  }

  inline Configuration_Config_Empty& operator=(Configuration_Config_Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Configuration_Config_Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Configuration_Config_Empty* internal_default_instance() {
    return reinterpret_cast<const Configuration_Config_Empty*>(
               &_Configuration_Config_Empty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Configuration_Config_Empty* other);
  friend void swap(Configuration_Config_Empty& a, Configuration_Config_Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Configuration_Config_Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Configuration_Config_Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Configuration_Config_Empty& from);
  void MergeFrom(const Configuration_Config_Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Configuration_Config_Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.Configuration.Config.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsConfiguration_Config_EmptyImpl();
};
// -------------------------------------------------------------------

class Configuration_Config_ExposedPortsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Configuration_Config_ExposedPortsEntry_DoNotUse, 
    ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Configuration_Config_ExposedPortsEntry_DoNotUse, 
    ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Configuration_Config_ExposedPortsEntry_DoNotUse();
  Configuration_Config_ExposedPortsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Configuration_Config_ExposedPortsEntry_DoNotUse& other);
  static const Configuration_Config_ExposedPortsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Configuration_Config_ExposedPortsEntry_DoNotUse*>(&_Configuration_Config_ExposedPortsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Configuration_Config_VolumesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Configuration_Config_VolumesEntry_DoNotUse, 
    ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Configuration_Config_VolumesEntry_DoNotUse, 
    ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Configuration_Config_VolumesEntry_DoNotUse();
  Configuration_Config_VolumesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Configuration_Config_VolumesEntry_DoNotUse& other);
  static const Configuration_Config_VolumesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Configuration_Config_VolumesEntry_DoNotUse*>(&_Configuration_Config_VolumesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Configuration_Config_LabelsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Configuration_Config_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Configuration_Config_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Configuration_Config_LabelsEntry_DoNotUse();
  Configuration_Config_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Configuration_Config_LabelsEntry_DoNotUse& other);
  static const Configuration_Config_LabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Configuration_Config_LabelsEntry_DoNotUse*>(&_Configuration_Config_LabelsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Configuration_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.Configuration.Config) */ {
 public:
  Configuration_Config();
  virtual ~Configuration_Config();

  Configuration_Config(const Configuration_Config& from);

  inline Configuration_Config& operator=(const Configuration_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Configuration_Config(Configuration_Config&& from) noexcept
    : Configuration_Config() {
    *this = ::std::move(from);
  }

  inline Configuration_Config& operator=(Configuration_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Configuration_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Configuration_Config* internal_default_instance() {
    return reinterpret_cast<const Configuration_Config*>(
               &_Configuration_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Configuration_Config* other);
  friend void swap(Configuration_Config& a, Configuration_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Configuration_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Configuration_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Configuration_Config& from);
  void MergeFrom(const Configuration_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Configuration_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Configuration_Config_Empty Empty;

  // accessors -------------------------------------------------------

  // map<string, .oci.spec.image.v1.Configuration.Config.Empty> ExposedPorts = 2;
  int exposedports_size() const;
  void clear_exposedports();
  static const int kExposedPortsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty >&
      exposedports() const;
  ::google::protobuf::Map< ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty >*
      mutable_exposedports();

  // repeated string Env = 3;
  int env_size() const;
  void clear_env();
  static const int kEnvFieldNumber = 3;
  const ::std::string& env(int index) const;
  ::std::string* mutable_env(int index);
  void set_env(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_env(int index, ::std::string&& value);
  #endif
  void set_env(int index, const char* value);
  void set_env(int index, const char* value, size_t size);
  ::std::string* add_env();
  void add_env(const ::std::string& value);
  #if LANG_CXX11
  void add_env(::std::string&& value);
  #endif
  void add_env(const char* value);
  void add_env(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& env() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_env();

  // repeated string Entrypoint = 4;
  int entrypoint_size() const;
  void clear_entrypoint();
  static const int kEntrypointFieldNumber = 4;
  const ::std::string& entrypoint(int index) const;
  ::std::string* mutable_entrypoint(int index);
  void set_entrypoint(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_entrypoint(int index, ::std::string&& value);
  #endif
  void set_entrypoint(int index, const char* value);
  void set_entrypoint(int index, const char* value, size_t size);
  ::std::string* add_entrypoint();
  void add_entrypoint(const ::std::string& value);
  #if LANG_CXX11
  void add_entrypoint(::std::string&& value);
  #endif
  void add_entrypoint(const char* value);
  void add_entrypoint(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& entrypoint() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_entrypoint();

  // repeated string Cmd = 5;
  int cmd_size() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 5;
  const ::std::string& cmd(int index) const;
  ::std::string* mutable_cmd(int index);
  void set_cmd(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cmd(int index, ::std::string&& value);
  #endif
  void set_cmd(int index, const char* value);
  void set_cmd(int index, const char* value, size_t size);
  ::std::string* add_cmd();
  void add_cmd(const ::std::string& value);
  #if LANG_CXX11
  void add_cmd(::std::string&& value);
  #endif
  void add_cmd(const char* value);
  void add_cmd(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cmd() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cmd();

  // map<string, .oci.spec.image.v1.Configuration.Config.Empty> Volumes = 6;
  int volumes_size() const;
  void clear_volumes();
  static const int kVolumesFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty >&
      volumes() const;
  ::google::protobuf::Map< ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty >*
      mutable_volumes();

  // map<string, string> Labels = 8;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // optional string User = 1;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  #if LANG_CXX11
  void set_user(::std::string&& value);
  #endif
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // optional string WorkingDir = 7;
  bool has_workingdir() const;
  void clear_workingdir();
  static const int kWorkingDirFieldNumber = 7;
  const ::std::string& workingdir() const;
  void set_workingdir(const ::std::string& value);
  #if LANG_CXX11
  void set_workingdir(::std::string&& value);
  #endif
  void set_workingdir(const char* value);
  void set_workingdir(const char* value, size_t size);
  ::std::string* mutable_workingdir();
  ::std::string* release_workingdir();
  void set_allocated_workingdir(::std::string* workingdir);

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.Configuration.Config)
 private:
  void set_has_user();
  void clear_has_user();
  void set_has_workingdir();
  void clear_has_workingdir();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::MapField<
      Configuration_Config_ExposedPortsEntry_DoNotUse,
      ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > exposedports_;
  ::google::protobuf::RepeatedPtrField< ::std::string> env_;
  ::google::protobuf::RepeatedPtrField< ::std::string> entrypoint_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cmd_;
  ::google::protobuf::internal::MapField<
      Configuration_Config_VolumesEntry_DoNotUse,
      ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > volumes_;
  ::google::protobuf::internal::MapField<
      Configuration_Config_LabelsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr workingdir_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsConfiguration_ConfigImpl();
};
// -------------------------------------------------------------------

class Configuration_History : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.Configuration.History) */ {
 public:
  Configuration_History();
  virtual ~Configuration_History();

  Configuration_History(const Configuration_History& from);

  inline Configuration_History& operator=(const Configuration_History& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Configuration_History(Configuration_History&& from) noexcept
    : Configuration_History() {
    *this = ::std::move(from);
  }

  inline Configuration_History& operator=(Configuration_History&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Configuration_History& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Configuration_History* internal_default_instance() {
    return reinterpret_cast<const Configuration_History*>(
               &_Configuration_History_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(Configuration_History* other);
  friend void swap(Configuration_History& a, Configuration_History& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Configuration_History* New() const PROTOBUF_FINAL { return New(NULL); }

  Configuration_History* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Configuration_History& from);
  void MergeFrom(const Configuration_History& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Configuration_History* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string created = 1;
  bool has_created() const;
  void clear_created();
  static const int kCreatedFieldNumber = 1;
  const ::std::string& created() const;
  void set_created(const ::std::string& value);
  #if LANG_CXX11
  void set_created(::std::string&& value);
  #endif
  void set_created(const char* value);
  void set_created(const char* value, size_t size);
  ::std::string* mutable_created();
  ::std::string* release_created();
  void set_allocated_created(::std::string* created);

  // optional string author = 2;
  bool has_author() const;
  void clear_author();
  static const int kAuthorFieldNumber = 2;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // optional string created_by = 3;
  bool has_created_by() const;
  void clear_created_by();
  static const int kCreatedByFieldNumber = 3;
  const ::std::string& created_by() const;
  void set_created_by(const ::std::string& value);
  #if LANG_CXX11
  void set_created_by(::std::string&& value);
  #endif
  void set_created_by(const char* value);
  void set_created_by(const char* value, size_t size);
  ::std::string* mutable_created_by();
  ::std::string* release_created_by();
  void set_allocated_created_by(::std::string* created_by);

  // optional string comment = 4;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 4;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional bool empty_layer = 5;
  bool has_empty_layer() const;
  void clear_empty_layer();
  static const int kEmptyLayerFieldNumber = 5;
  bool empty_layer() const;
  void set_empty_layer(bool value);

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.Configuration.History)
 private:
  void set_has_created();
  void clear_has_created();
  void set_has_author();
  void clear_has_author();
  void set_has_created_by();
  void clear_has_created_by();
  void set_has_comment();
  void clear_has_comment();
  void set_has_empty_layer();
  void clear_has_empty_layer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr created_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::internal::ArenaStringPtr created_by_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  bool empty_layer_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsConfiguration_HistoryImpl();
};
// -------------------------------------------------------------------

class Configuration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oci.spec.image.v1.Configuration) */ {
 public:
  Configuration();
  virtual ~Configuration();

  Configuration(const Configuration& from);

  inline Configuration& operator=(const Configuration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Configuration(Configuration&& from) noexcept
    : Configuration() {
    *this = ::std::move(from);
  }

  inline Configuration& operator=(Configuration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Configuration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Configuration* internal_default_instance() {
    return reinterpret_cast<const Configuration*>(
               &_Configuration_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(Configuration* other);
  friend void swap(Configuration& a, Configuration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Configuration* New() const PROTOBUF_FINAL { return New(NULL); }

  Configuration* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Configuration& from);
  void MergeFrom(const Configuration& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Configuration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Configuration_Rootfs Rootfs;
  typedef Configuration_Config Config;
  typedef Configuration_History History;

  // accessors -------------------------------------------------------

  // repeated .oci.spec.image.v1.Configuration.History history = 7;
  int history_size() const;
  void clear_history();
  static const int kHistoryFieldNumber = 7;
  const ::oci::spec::image::v1::Configuration_History& history(int index) const;
  ::oci::spec::image::v1::Configuration_History* mutable_history(int index);
  ::oci::spec::image::v1::Configuration_History* add_history();
  ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Configuration_History >*
      mutable_history();
  const ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Configuration_History >&
      history() const;

  // required string architecture = 1;
  bool has_architecture() const;
  void clear_architecture();
  static const int kArchitectureFieldNumber = 1;
  const ::std::string& architecture() const;
  void set_architecture(const ::std::string& value);
  #if LANG_CXX11
  void set_architecture(::std::string&& value);
  #endif
  void set_architecture(const char* value);
  void set_architecture(const char* value, size_t size);
  ::std::string* mutable_architecture();
  ::std::string* release_architecture();
  void set_allocated_architecture(::std::string* architecture);

  // required string os = 2;
  bool has_os() const;
  void clear_os();
  static const int kOsFieldNumber = 2;
  const ::std::string& os() const;
  void set_os(const ::std::string& value);
  #if LANG_CXX11
  void set_os(::std::string&& value);
  #endif
  void set_os(const char* value);
  void set_os(const char* value, size_t size);
  ::std::string* mutable_os();
  ::std::string* release_os();
  void set_allocated_os(::std::string* os);

  // optional string created = 4;
  bool has_created() const;
  void clear_created();
  static const int kCreatedFieldNumber = 4;
  const ::std::string& created() const;
  void set_created(const ::std::string& value);
  #if LANG_CXX11
  void set_created(::std::string&& value);
  #endif
  void set_created(const char* value);
  void set_created(const char* value, size_t size);
  ::std::string* mutable_created();
  ::std::string* release_created();
  void set_allocated_created(::std::string* created);

  // optional string author = 5;
  bool has_author() const;
  void clear_author();
  static const int kAuthorFieldNumber = 5;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // required .oci.spec.image.v1.Configuration.Rootfs rootfs = 3;
  bool has_rootfs() const;
  void clear_rootfs();
  static const int kRootfsFieldNumber = 3;
  const ::oci::spec::image::v1::Configuration_Rootfs& rootfs() const;
  ::oci::spec::image::v1::Configuration_Rootfs* release_rootfs();
  ::oci::spec::image::v1::Configuration_Rootfs* mutable_rootfs();
  void set_allocated_rootfs(::oci::spec::image::v1::Configuration_Rootfs* rootfs);

  // optional .oci.spec.image.v1.Configuration.Config config = 6;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 6;
  const ::oci::spec::image::v1::Configuration_Config& config() const;
  ::oci::spec::image::v1::Configuration_Config* release_config();
  ::oci::spec::image::v1::Configuration_Config* mutable_config();
  void set_allocated_config(::oci::spec::image::v1::Configuration_Config* config);

  // @@protoc_insertion_point(class_scope:oci.spec.image.v1.Configuration)
 private:
  void set_has_architecture();
  void clear_has_architecture();
  void set_has_os();
  void clear_has_os();
  void set_has_rootfs();
  void clear_has_rootfs();
  void set_has_created();
  void clear_has_created();
  void set_has_author();
  void clear_has_author();
  void set_has_config();
  void clear_has_config();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Configuration_History > history_;
  ::google::protobuf::internal::ArenaStringPtr architecture_;
  ::google::protobuf::internal::ArenaStringPtr os_;
  ::google::protobuf::internal::ArenaStringPtr created_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::oci::spec::image::v1::Configuration_Rootfs* rootfs_;
  ::oci::spec::image::v1::Configuration_Config* config_;
  friend struct ::protobuf_mesos_2foci_2fspec_2eproto::TableStruct;
  friend void ::protobuf_mesos_2foci_2fspec_2eproto::InitDefaultsConfigurationImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Descriptor

// required string mediaType = 1;
inline bool Descriptor::has_mediatype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Descriptor::set_has_mediatype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Descriptor::clear_has_mediatype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Descriptor::clear_mediatype() {
  mediatype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mediatype();
}
inline const ::std::string& Descriptor::mediatype() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Descriptor.mediaType)
  return mediatype_.GetNoArena();
}
inline void Descriptor::set_mediatype(const ::std::string& value) {
  set_has_mediatype();
  mediatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Descriptor.mediaType)
}
#if LANG_CXX11
inline void Descriptor::set_mediatype(::std::string&& value) {
  set_has_mediatype();
  mediatype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Descriptor.mediaType)
}
#endif
inline void Descriptor::set_mediatype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mediatype();
  mediatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Descriptor.mediaType)
}
inline void Descriptor::set_mediatype(const char* value, size_t size) {
  set_has_mediatype();
  mediatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Descriptor.mediaType)
}
inline ::std::string* Descriptor::mutable_mediatype() {
  set_has_mediatype();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Descriptor.mediaType)
  return mediatype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Descriptor::release_mediatype() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Descriptor.mediaType)
  clear_has_mediatype();
  return mediatype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Descriptor::set_allocated_mediatype(::std::string* mediatype) {
  if (mediatype != NULL) {
    set_has_mediatype();
  } else {
    clear_has_mediatype();
  }
  mediatype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediatype);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Descriptor.mediaType)
}

// required string digest = 2;
inline bool Descriptor::has_digest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Descriptor::set_has_digest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Descriptor::clear_has_digest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Descriptor::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_digest();
}
inline const ::std::string& Descriptor::digest() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Descriptor.digest)
  return digest_.GetNoArena();
}
inline void Descriptor::set_digest(const ::std::string& value) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Descriptor.digest)
}
#if LANG_CXX11
inline void Descriptor::set_digest(::std::string&& value) {
  set_has_digest();
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Descriptor.digest)
}
#endif
inline void Descriptor::set_digest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Descriptor.digest)
}
inline void Descriptor::set_digest(const char* value, size_t size) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Descriptor.digest)
}
inline ::std::string* Descriptor::mutable_digest() {
  set_has_digest();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Descriptor.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Descriptor::release_digest() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Descriptor.digest)
  clear_has_digest();
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Descriptor::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    set_has_digest();
  } else {
    clear_has_digest();
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Descriptor.digest)
}

// required int64 size = 3;
inline bool Descriptor::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Descriptor::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Descriptor::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Descriptor::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 Descriptor::size() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Descriptor.size)
  return size_;
}
inline void Descriptor::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Descriptor.size)
}

// repeated string urls = 4;
inline int Descriptor::urls_size() const {
  return urls_.size();
}
inline void Descriptor::clear_urls() {
  urls_.Clear();
}
inline const ::std::string& Descriptor::urls(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Descriptor.urls)
  return urls_.Get(index);
}
inline ::std::string* Descriptor::mutable_urls(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Descriptor.urls)
  return urls_.Mutable(index);
}
inline void Descriptor::set_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Descriptor.urls)
  urls_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Descriptor::set_urls(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Descriptor.urls)
  urls_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Descriptor::set_urls(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Descriptor.urls)
}
inline void Descriptor::set_urls(int index, const char* value, size_t size) {
  urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Descriptor.urls)
}
inline ::std::string* Descriptor::add_urls() {
  // @@protoc_insertion_point(field_add_mutable:oci.spec.image.v1.Descriptor.urls)
  return urls_.Add();
}
inline void Descriptor::add_urls(const ::std::string& value) {
  urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Descriptor.urls)
}
#if LANG_CXX11
inline void Descriptor::add_urls(::std::string&& value) {
  urls_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Descriptor.urls)
}
#endif
inline void Descriptor::add_urls(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:oci.spec.image.v1.Descriptor.urls)
}
inline void Descriptor::add_urls(const char* value, size_t size) {
  urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:oci.spec.image.v1.Descriptor.urls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Descriptor::urls() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Descriptor.urls)
  return urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Descriptor::mutable_urls() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Descriptor.urls)
  return &urls_;
}

// map<string, string> annotations = 5;
inline int Descriptor::annotations_size() const {
  return annotations_.size();
}
inline void Descriptor::clear_annotations() {
  annotations_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Descriptor::annotations() const {
  // @@protoc_insertion_point(field_map:oci.spec.image.v1.Descriptor.annotations)
  return annotations_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Descriptor::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_map:oci.spec.image.v1.Descriptor.annotations)
  return annotations_.MutableMap();
}

// -------------------------------------------------------------------

// Platform

// required string architecture = 1;
inline bool Platform::has_architecture() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Platform::set_has_architecture() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Platform::clear_has_architecture() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Platform::clear_architecture() {
  architecture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_architecture();
}
inline const ::std::string& Platform::architecture() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Platform.architecture)
  return architecture_.GetNoArena();
}
inline void Platform::set_architecture(const ::std::string& value) {
  set_has_architecture();
  architecture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Platform.architecture)
}
#if LANG_CXX11
inline void Platform::set_architecture(::std::string&& value) {
  set_has_architecture();
  architecture_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Platform.architecture)
}
#endif
inline void Platform::set_architecture(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_architecture();
  architecture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Platform.architecture)
}
inline void Platform::set_architecture(const char* value, size_t size) {
  set_has_architecture();
  architecture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Platform.architecture)
}
inline ::std::string* Platform::mutable_architecture() {
  set_has_architecture();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Platform.architecture)
  return architecture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Platform::release_architecture() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Platform.architecture)
  clear_has_architecture();
  return architecture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Platform::set_allocated_architecture(::std::string* architecture) {
  if (architecture != NULL) {
    set_has_architecture();
  } else {
    clear_has_architecture();
  }
  architecture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), architecture);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Platform.architecture)
}

// required string os = 2;
inline bool Platform::has_os() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Platform::set_has_os() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Platform::clear_has_os() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Platform::clear_os() {
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os();
}
inline const ::std::string& Platform::os() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Platform.os)
  return os_.GetNoArena();
}
inline void Platform::set_os(const ::std::string& value) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Platform.os)
}
#if LANG_CXX11
inline void Platform::set_os(::std::string&& value) {
  set_has_os();
  os_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Platform.os)
}
#endif
inline void Platform::set_os(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Platform.os)
}
inline void Platform::set_os(const char* value, size_t size) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Platform.os)
}
inline ::std::string* Platform::mutable_os() {
  set_has_os();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Platform.os)
  return os_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Platform::release_os() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Platform.os)
  clear_has_os();
  return os_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Platform::set_allocated_os(::std::string* os) {
  if (os != NULL) {
    set_has_os();
  } else {
    clear_has_os();
  }
  os_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Platform.os)
}

// optional string os_version = 3;
inline bool Platform::has_os_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Platform::set_has_os_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Platform::clear_has_os_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Platform::clear_os_version() {
  os_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_version();
}
inline const ::std::string& Platform::os_version() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Platform.os_version)
  return os_version_.GetNoArena();
}
inline void Platform::set_os_version(const ::std::string& value) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Platform.os_version)
}
#if LANG_CXX11
inline void Platform::set_os_version(::std::string&& value) {
  set_has_os_version();
  os_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Platform.os_version)
}
#endif
inline void Platform::set_os_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Platform.os_version)
}
inline void Platform::set_os_version(const char* value, size_t size) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Platform.os_version)
}
inline ::std::string* Platform::mutable_os_version() {
  set_has_os_version();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Platform.os_version)
  return os_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Platform::release_os_version() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Platform.os_version)
  clear_has_os_version();
  return os_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Platform::set_allocated_os_version(::std::string* os_version) {
  if (os_version != NULL) {
    set_has_os_version();
  } else {
    clear_has_os_version();
  }
  os_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_version);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Platform.os_version)
}

// repeated string os_features = 4;
inline int Platform::os_features_size() const {
  return os_features_.size();
}
inline void Platform::clear_os_features() {
  os_features_.Clear();
}
inline const ::std::string& Platform::os_features(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Platform.os_features)
  return os_features_.Get(index);
}
inline ::std::string* Platform::mutable_os_features(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Platform.os_features)
  return os_features_.Mutable(index);
}
inline void Platform::set_os_features(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Platform.os_features)
  os_features_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Platform::set_os_features(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Platform.os_features)
  os_features_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Platform::set_os_features(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  os_features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Platform.os_features)
}
inline void Platform::set_os_features(int index, const char* value, size_t size) {
  os_features_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Platform.os_features)
}
inline ::std::string* Platform::add_os_features() {
  // @@protoc_insertion_point(field_add_mutable:oci.spec.image.v1.Platform.os_features)
  return os_features_.Add();
}
inline void Platform::add_os_features(const ::std::string& value) {
  os_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Platform.os_features)
}
#if LANG_CXX11
inline void Platform::add_os_features(::std::string&& value) {
  os_features_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Platform.os_features)
}
#endif
inline void Platform::add_os_features(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  os_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:oci.spec.image.v1.Platform.os_features)
}
inline void Platform::add_os_features(const char* value, size_t size) {
  os_features_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:oci.spec.image.v1.Platform.os_features)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Platform::os_features() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Platform.os_features)
  return os_features_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Platform::mutable_os_features() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Platform.os_features)
  return &os_features_;
}

// optional string variant = 5;
inline bool Platform::has_variant() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Platform::set_has_variant() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Platform::clear_has_variant() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Platform::clear_variant() {
  variant_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_variant();
}
inline const ::std::string& Platform::variant() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Platform.variant)
  return variant_.GetNoArena();
}
inline void Platform::set_variant(const ::std::string& value) {
  set_has_variant();
  variant_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Platform.variant)
}
#if LANG_CXX11
inline void Platform::set_variant(::std::string&& value) {
  set_has_variant();
  variant_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Platform.variant)
}
#endif
inline void Platform::set_variant(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_variant();
  variant_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Platform.variant)
}
inline void Platform::set_variant(const char* value, size_t size) {
  set_has_variant();
  variant_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Platform.variant)
}
inline ::std::string* Platform::mutable_variant() {
  set_has_variant();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Platform.variant)
  return variant_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Platform::release_variant() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Platform.variant)
  clear_has_variant();
  return variant_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Platform::set_allocated_variant(::std::string* variant) {
  if (variant != NULL) {
    set_has_variant();
  } else {
    clear_has_variant();
  }
  variant_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Platform.variant)
}

// repeated string features = 6;
inline int Platform::features_size() const {
  return features_.size();
}
inline void Platform::clear_features() {
  features_.Clear();
}
inline const ::std::string& Platform::features(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Platform.features)
  return features_.Get(index);
}
inline ::std::string* Platform::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Platform.features)
  return features_.Mutable(index);
}
inline void Platform::set_features(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Platform.features)
  features_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Platform::set_features(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Platform.features)
  features_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Platform::set_features(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Platform.features)
}
inline void Platform::set_features(int index, const char* value, size_t size) {
  features_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Platform.features)
}
inline ::std::string* Platform::add_features() {
  // @@protoc_insertion_point(field_add_mutable:oci.spec.image.v1.Platform.features)
  return features_.Add();
}
inline void Platform::add_features(const ::std::string& value) {
  features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Platform.features)
}
#if LANG_CXX11
inline void Platform::add_features(::std::string&& value) {
  features_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Platform.features)
}
#endif
inline void Platform::add_features(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:oci.spec.image.v1.Platform.features)
}
inline void Platform::add_features(const char* value, size_t size) {
  features_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:oci.spec.image.v1.Platform.features)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Platform::features() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Platform.features)
  return features_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Platform::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Platform.features)
  return &features_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ManifestDescriptor

// required string mediaType = 1;
inline bool ManifestDescriptor::has_mediatype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManifestDescriptor::set_has_mediatype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManifestDescriptor::clear_has_mediatype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManifestDescriptor::clear_mediatype() {
  mediatype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mediatype();
}
inline const ::std::string& ManifestDescriptor::mediatype() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.ManifestDescriptor.mediaType)
  return mediatype_.GetNoArena();
}
inline void ManifestDescriptor::set_mediatype(const ::std::string& value) {
  set_has_mediatype();
  mediatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.ManifestDescriptor.mediaType)
}
#if LANG_CXX11
inline void ManifestDescriptor::set_mediatype(::std::string&& value) {
  set_has_mediatype();
  mediatype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.ManifestDescriptor.mediaType)
}
#endif
inline void ManifestDescriptor::set_mediatype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mediatype();
  mediatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.ManifestDescriptor.mediaType)
}
inline void ManifestDescriptor::set_mediatype(const char* value, size_t size) {
  set_has_mediatype();
  mediatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.ManifestDescriptor.mediaType)
}
inline ::std::string* ManifestDescriptor::mutable_mediatype() {
  set_has_mediatype();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.ManifestDescriptor.mediaType)
  return mediatype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManifestDescriptor::release_mediatype() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.ManifestDescriptor.mediaType)
  clear_has_mediatype();
  return mediatype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManifestDescriptor::set_allocated_mediatype(::std::string* mediatype) {
  if (mediatype != NULL) {
    set_has_mediatype();
  } else {
    clear_has_mediatype();
  }
  mediatype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediatype);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.ManifestDescriptor.mediaType)
}

// required string digest = 2;
inline bool ManifestDescriptor::has_digest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManifestDescriptor::set_has_digest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManifestDescriptor::clear_has_digest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManifestDescriptor::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_digest();
}
inline const ::std::string& ManifestDescriptor::digest() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.ManifestDescriptor.digest)
  return digest_.GetNoArena();
}
inline void ManifestDescriptor::set_digest(const ::std::string& value) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.ManifestDescriptor.digest)
}
#if LANG_CXX11
inline void ManifestDescriptor::set_digest(::std::string&& value) {
  set_has_digest();
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.ManifestDescriptor.digest)
}
#endif
inline void ManifestDescriptor::set_digest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.ManifestDescriptor.digest)
}
inline void ManifestDescriptor::set_digest(const char* value, size_t size) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.ManifestDescriptor.digest)
}
inline ::std::string* ManifestDescriptor::mutable_digest() {
  set_has_digest();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.ManifestDescriptor.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManifestDescriptor::release_digest() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.ManifestDescriptor.digest)
  clear_has_digest();
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManifestDescriptor::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    set_has_digest();
  } else {
    clear_has_digest();
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.ManifestDescriptor.digest)
}

// required int64 size = 3;
inline bool ManifestDescriptor::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManifestDescriptor::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManifestDescriptor::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManifestDescriptor::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 ManifestDescriptor::size() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.ManifestDescriptor.size)
  return size_;
}
inline void ManifestDescriptor::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.ManifestDescriptor.size)
}

// optional .oci.spec.image.v1.Platform platform = 4;
inline bool ManifestDescriptor::has_platform() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManifestDescriptor::set_has_platform() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManifestDescriptor::clear_has_platform() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManifestDescriptor::clear_platform() {
  if (platform_ != NULL) platform_->Clear();
  clear_has_platform();
}
inline const ::oci::spec::image::v1::Platform& ManifestDescriptor::platform() const {
  const ::oci::spec::image::v1::Platform* p = platform_;
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.ManifestDescriptor.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::oci::spec::image::v1::Platform*>(
      &::oci::spec::image::v1::_Platform_default_instance_);
}
inline ::oci::spec::image::v1::Platform* ManifestDescriptor::release_platform() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.ManifestDescriptor.platform)
  clear_has_platform();
  ::oci::spec::image::v1::Platform* temp = platform_;
  platform_ = NULL;
  return temp;
}
inline ::oci::spec::image::v1::Platform* ManifestDescriptor::mutable_platform() {
  set_has_platform();
  if (platform_ == NULL) {
    platform_ = new ::oci::spec::image::v1::Platform;
  }
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.ManifestDescriptor.platform)
  return platform_;
}
inline void ManifestDescriptor::set_allocated_platform(::oci::spec::image::v1::Platform* platform) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete platform_;
  }
  if (platform) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      platform = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, platform, submessage_arena);
    }
    set_has_platform();
  } else {
    clear_has_platform();
  }
  platform_ = platform;
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.ManifestDescriptor.platform)
}

// repeated string urls = 5;
inline int ManifestDescriptor::urls_size() const {
  return urls_.size();
}
inline void ManifestDescriptor::clear_urls() {
  urls_.Clear();
}
inline const ::std::string& ManifestDescriptor::urls(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.ManifestDescriptor.urls)
  return urls_.Get(index);
}
inline ::std::string* ManifestDescriptor::mutable_urls(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.ManifestDescriptor.urls)
  return urls_.Mutable(index);
}
inline void ManifestDescriptor::set_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.ManifestDescriptor.urls)
  urls_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ManifestDescriptor::set_urls(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.ManifestDescriptor.urls)
  urls_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ManifestDescriptor::set_urls(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.ManifestDescriptor.urls)
}
inline void ManifestDescriptor::set_urls(int index, const char* value, size_t size) {
  urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.ManifestDescriptor.urls)
}
inline ::std::string* ManifestDescriptor::add_urls() {
  // @@protoc_insertion_point(field_add_mutable:oci.spec.image.v1.ManifestDescriptor.urls)
  return urls_.Add();
}
inline void ManifestDescriptor::add_urls(const ::std::string& value) {
  urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.ManifestDescriptor.urls)
}
#if LANG_CXX11
inline void ManifestDescriptor::add_urls(::std::string&& value) {
  urls_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.ManifestDescriptor.urls)
}
#endif
inline void ManifestDescriptor::add_urls(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:oci.spec.image.v1.ManifestDescriptor.urls)
}
inline void ManifestDescriptor::add_urls(const char* value, size_t size) {
  urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:oci.spec.image.v1.ManifestDescriptor.urls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ManifestDescriptor::urls() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.ManifestDescriptor.urls)
  return urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ManifestDescriptor::mutable_urls() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.ManifestDescriptor.urls)
  return &urls_;
}

// map<string, string> annotations = 6;
inline int ManifestDescriptor::annotations_size() const {
  return annotations_.size();
}
inline void ManifestDescriptor::clear_annotations() {
  annotations_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ManifestDescriptor::annotations() const {
  // @@protoc_insertion_point(field_map:oci.spec.image.v1.ManifestDescriptor.annotations)
  return annotations_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ManifestDescriptor::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_map:oci.spec.image.v1.ManifestDescriptor.annotations)
  return annotations_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Index

// required int64 schemaVersion = 1;
inline bool Index::has_schemaversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Index::set_has_schemaversion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Index::clear_has_schemaversion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Index::clear_schemaversion() {
  schemaversion_ = GOOGLE_LONGLONG(0);
  clear_has_schemaversion();
}
inline ::google::protobuf::int64 Index::schemaversion() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Index.schemaVersion)
  return schemaversion_;
}
inline void Index::set_schemaversion(::google::protobuf::int64 value) {
  set_has_schemaversion();
  schemaversion_ = value;
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Index.schemaVersion)
}

// repeated .oci.spec.image.v1.ManifestDescriptor manifests = 2;
inline int Index::manifests_size() const {
  return manifests_.size();
}
inline void Index::clear_manifests() {
  manifests_.Clear();
}
inline const ::oci::spec::image::v1::ManifestDescriptor& Index::manifests(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Index.manifests)
  return manifests_.Get(index);
}
inline ::oci::spec::image::v1::ManifestDescriptor* Index::mutable_manifests(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Index.manifests)
  return manifests_.Mutable(index);
}
inline ::oci::spec::image::v1::ManifestDescriptor* Index::add_manifests() {
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Index.manifests)
  return manifests_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::ManifestDescriptor >*
Index::mutable_manifests() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Index.manifests)
  return &manifests_;
}
inline const ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::ManifestDescriptor >&
Index::manifests() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Index.manifests)
  return manifests_;
}

// map<string, string> annotations = 3;
inline int Index::annotations_size() const {
  return annotations_.size();
}
inline void Index::clear_annotations() {
  annotations_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Index::annotations() const {
  // @@protoc_insertion_point(field_map:oci.spec.image.v1.Index.annotations)
  return annotations_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Index::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_map:oci.spec.image.v1.Index.annotations)
  return annotations_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Manifest

// required int64 schemaVersion = 1;
inline bool Manifest::has_schemaversion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Manifest::set_has_schemaversion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Manifest::clear_has_schemaversion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Manifest::clear_schemaversion() {
  schemaversion_ = GOOGLE_LONGLONG(0);
  clear_has_schemaversion();
}
inline ::google::protobuf::int64 Manifest::schemaversion() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Manifest.schemaVersion)
  return schemaversion_;
}
inline void Manifest::set_schemaversion(::google::protobuf::int64 value) {
  set_has_schemaversion();
  schemaversion_ = value;
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Manifest.schemaVersion)
}

// required .oci.spec.image.v1.Descriptor config = 2;
inline bool Manifest::has_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Manifest::set_has_config() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Manifest::clear_has_config() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Manifest::clear_config() {
  if (config_ != NULL) config_->Clear();
  clear_has_config();
}
inline const ::oci::spec::image::v1::Descriptor& Manifest::config() const {
  const ::oci::spec::image::v1::Descriptor* p = config_;
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Manifest.config)
  return p != NULL ? *p : *reinterpret_cast<const ::oci::spec::image::v1::Descriptor*>(
      &::oci::spec::image::v1::_Descriptor_default_instance_);
}
inline ::oci::spec::image::v1::Descriptor* Manifest::release_config() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Manifest.config)
  clear_has_config();
  ::oci::spec::image::v1::Descriptor* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::oci::spec::image::v1::Descriptor* Manifest::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    config_ = new ::oci::spec::image::v1::Descriptor;
  }
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Manifest.config)
  return config_;
}
inline void Manifest::set_allocated_config(::oci::spec::image::v1::Descriptor* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
  } else {
    clear_has_config();
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Manifest.config)
}

// repeated .oci.spec.image.v1.Descriptor layers = 3;
inline int Manifest::layers_size() const {
  return layers_.size();
}
inline void Manifest::clear_layers() {
  layers_.Clear();
}
inline const ::oci::spec::image::v1::Descriptor& Manifest::layers(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Manifest.layers)
  return layers_.Get(index);
}
inline ::oci::spec::image::v1::Descriptor* Manifest::mutable_layers(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Manifest.layers)
  return layers_.Mutable(index);
}
inline ::oci::spec::image::v1::Descriptor* Manifest::add_layers() {
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Manifest.layers)
  return layers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Descriptor >*
Manifest::mutable_layers() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Manifest.layers)
  return &layers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Descriptor >&
Manifest::layers() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Manifest.layers)
  return layers_;
}

// map<string, string> annotations = 4;
inline int Manifest::annotations_size() const {
  return annotations_.size();
}
inline void Manifest::clear_annotations() {
  annotations_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Manifest::annotations() const {
  // @@protoc_insertion_point(field_map:oci.spec.image.v1.Manifest.annotations)
  return annotations_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Manifest::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_map:oci.spec.image.v1.Manifest.annotations)
  return annotations_.MutableMap();
}

// -------------------------------------------------------------------

// Configuration_Rootfs

// required string type = 1;
inline bool Configuration_Rootfs::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Configuration_Rootfs::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Configuration_Rootfs::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Configuration_Rootfs::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& Configuration_Rootfs::type() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.Rootfs.type)
  return type_.GetNoArena();
}
inline void Configuration_Rootfs::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Rootfs.type)
}
#if LANG_CXX11
inline void Configuration_Rootfs::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.Rootfs.type)
}
#endif
inline void Configuration_Rootfs::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.Rootfs.type)
}
inline void Configuration_Rootfs::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.Rootfs.type)
}
inline ::std::string* Configuration_Rootfs::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.Rootfs.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration_Rootfs::release_type() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.Rootfs.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration_Rootfs::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.Rootfs.type)
}

// repeated string diff_ids = 2;
inline int Configuration_Rootfs::diff_ids_size() const {
  return diff_ids_.size();
}
inline void Configuration_Rootfs::clear_diff_ids() {
  diff_ids_.Clear();
}
inline const ::std::string& Configuration_Rootfs::diff_ids(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
  return diff_ids_.Get(index);
}
inline ::std::string* Configuration_Rootfs::mutable_diff_ids(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
  return diff_ids_.Mutable(index);
}
inline void Configuration_Rootfs::set_diff_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
  diff_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Configuration_Rootfs::set_diff_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
  diff_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Configuration_Rootfs::set_diff_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  diff_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
}
inline void Configuration_Rootfs::set_diff_ids(int index, const char* value, size_t size) {
  diff_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
}
inline ::std::string* Configuration_Rootfs::add_diff_ids() {
  // @@protoc_insertion_point(field_add_mutable:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
  return diff_ids_.Add();
}
inline void Configuration_Rootfs::add_diff_ids(const ::std::string& value) {
  diff_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
}
#if LANG_CXX11
inline void Configuration_Rootfs::add_diff_ids(::std::string&& value) {
  diff_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
}
#endif
inline void Configuration_Rootfs::add_diff_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  diff_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
}
inline void Configuration_Rootfs::add_diff_ids(const char* value, size_t size) {
  diff_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Configuration_Rootfs::diff_ids() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
  return diff_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Configuration_Rootfs::mutable_diff_ids() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Configuration.Rootfs.diff_ids)
  return &diff_ids_;
}

// -------------------------------------------------------------------

// Configuration_Config_Empty

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Configuration_Config

// optional string User = 1;
inline bool Configuration_Config::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Configuration_Config::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Configuration_Config::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Configuration_Config::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
inline const ::std::string& Configuration_Config::user() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.Config.User)
  return user_.GetNoArena();
}
inline void Configuration_Config::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Config.User)
}
#if LANG_CXX11
inline void Configuration_Config::set_user(::std::string&& value) {
  set_has_user();
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.Config.User)
}
#endif
inline void Configuration_Config::set_user(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.Config.User)
}
inline void Configuration_Config::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.Config.User)
}
inline ::std::string* Configuration_Config::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.Config.User)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration_Config::release_user() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.Config.User)
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration_Config::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.Config.User)
}

// map<string, .oci.spec.image.v1.Configuration.Config.Empty> ExposedPorts = 2;
inline int Configuration_Config::exposedports_size() const {
  return exposedports_.size();
}
inline void Configuration_Config::clear_exposedports() {
  exposedports_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty >&
Configuration_Config::exposedports() const {
  // @@protoc_insertion_point(field_map:oci.spec.image.v1.Configuration.Config.ExposedPorts)
  return exposedports_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty >*
Configuration_Config::mutable_exposedports() {
  // @@protoc_insertion_point(field_mutable_map:oci.spec.image.v1.Configuration.Config.ExposedPorts)
  return exposedports_.MutableMap();
}

// repeated string Env = 3;
inline int Configuration_Config::env_size() const {
  return env_.size();
}
inline void Configuration_Config::clear_env() {
  env_.Clear();
}
inline const ::std::string& Configuration_Config::env(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.Config.Env)
  return env_.Get(index);
}
inline ::std::string* Configuration_Config::mutable_env(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.Config.Env)
  return env_.Mutable(index);
}
inline void Configuration_Config::set_env(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Config.Env)
  env_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Configuration_Config::set_env(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Config.Env)
  env_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Configuration_Config::set_env(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  env_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.Config.Env)
}
inline void Configuration_Config::set_env(int index, const char* value, size_t size) {
  env_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.Config.Env)
}
inline ::std::string* Configuration_Config::add_env() {
  // @@protoc_insertion_point(field_add_mutable:oci.spec.image.v1.Configuration.Config.Env)
  return env_.Add();
}
inline void Configuration_Config::add_env(const ::std::string& value) {
  env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Configuration.Config.Env)
}
#if LANG_CXX11
inline void Configuration_Config::add_env(::std::string&& value) {
  env_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Configuration.Config.Env)
}
#endif
inline void Configuration_Config::add_env(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:oci.spec.image.v1.Configuration.Config.Env)
}
inline void Configuration_Config::add_env(const char* value, size_t size) {
  env_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:oci.spec.image.v1.Configuration.Config.Env)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Configuration_Config::env() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Configuration.Config.Env)
  return env_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Configuration_Config::mutable_env() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Configuration.Config.Env)
  return &env_;
}

// repeated string Entrypoint = 4;
inline int Configuration_Config::entrypoint_size() const {
  return entrypoint_.size();
}
inline void Configuration_Config::clear_entrypoint() {
  entrypoint_.Clear();
}
inline const ::std::string& Configuration_Config::entrypoint(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.Config.Entrypoint)
  return entrypoint_.Get(index);
}
inline ::std::string* Configuration_Config::mutable_entrypoint(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.Config.Entrypoint)
  return entrypoint_.Mutable(index);
}
inline void Configuration_Config::set_entrypoint(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Config.Entrypoint)
  entrypoint_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Configuration_Config::set_entrypoint(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Config.Entrypoint)
  entrypoint_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Configuration_Config::set_entrypoint(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  entrypoint_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.Config.Entrypoint)
}
inline void Configuration_Config::set_entrypoint(int index, const char* value, size_t size) {
  entrypoint_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.Config.Entrypoint)
}
inline ::std::string* Configuration_Config::add_entrypoint() {
  // @@protoc_insertion_point(field_add_mutable:oci.spec.image.v1.Configuration.Config.Entrypoint)
  return entrypoint_.Add();
}
inline void Configuration_Config::add_entrypoint(const ::std::string& value) {
  entrypoint_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Configuration.Config.Entrypoint)
}
#if LANG_CXX11
inline void Configuration_Config::add_entrypoint(::std::string&& value) {
  entrypoint_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Configuration.Config.Entrypoint)
}
#endif
inline void Configuration_Config::add_entrypoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  entrypoint_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:oci.spec.image.v1.Configuration.Config.Entrypoint)
}
inline void Configuration_Config::add_entrypoint(const char* value, size_t size) {
  entrypoint_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:oci.spec.image.v1.Configuration.Config.Entrypoint)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Configuration_Config::entrypoint() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Configuration.Config.Entrypoint)
  return entrypoint_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Configuration_Config::mutable_entrypoint() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Configuration.Config.Entrypoint)
  return &entrypoint_;
}

// repeated string Cmd = 5;
inline int Configuration_Config::cmd_size() const {
  return cmd_.size();
}
inline void Configuration_Config::clear_cmd() {
  cmd_.Clear();
}
inline const ::std::string& Configuration_Config::cmd(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.Config.Cmd)
  return cmd_.Get(index);
}
inline ::std::string* Configuration_Config::mutable_cmd(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.Config.Cmd)
  return cmd_.Mutable(index);
}
inline void Configuration_Config::set_cmd(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Config.Cmd)
  cmd_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Configuration_Config::set_cmd(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Config.Cmd)
  cmd_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Configuration_Config::set_cmd(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cmd_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.Config.Cmd)
}
inline void Configuration_Config::set_cmd(int index, const char* value, size_t size) {
  cmd_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.Config.Cmd)
}
inline ::std::string* Configuration_Config::add_cmd() {
  // @@protoc_insertion_point(field_add_mutable:oci.spec.image.v1.Configuration.Config.Cmd)
  return cmd_.Add();
}
inline void Configuration_Config::add_cmd(const ::std::string& value) {
  cmd_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Configuration.Config.Cmd)
}
#if LANG_CXX11
inline void Configuration_Config::add_cmd(::std::string&& value) {
  cmd_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Configuration.Config.Cmd)
}
#endif
inline void Configuration_Config::add_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cmd_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:oci.spec.image.v1.Configuration.Config.Cmd)
}
inline void Configuration_Config::add_cmd(const char* value, size_t size) {
  cmd_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:oci.spec.image.v1.Configuration.Config.Cmd)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Configuration_Config::cmd() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Configuration.Config.Cmd)
  return cmd_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Configuration_Config::mutable_cmd() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Configuration.Config.Cmd)
  return &cmd_;
}

// map<string, .oci.spec.image.v1.Configuration.Config.Empty> Volumes = 6;
inline int Configuration_Config::volumes_size() const {
  return volumes_.size();
}
inline void Configuration_Config::clear_volumes() {
  volumes_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty >&
Configuration_Config::volumes() const {
  // @@protoc_insertion_point(field_map:oci.spec.image.v1.Configuration.Config.Volumes)
  return volumes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::oci::spec::image::v1::Configuration_Config_Empty >*
Configuration_Config::mutable_volumes() {
  // @@protoc_insertion_point(field_mutable_map:oci.spec.image.v1.Configuration.Config.Volumes)
  return volumes_.MutableMap();
}

// optional string WorkingDir = 7;
inline bool Configuration_Config::has_workingdir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Configuration_Config::set_has_workingdir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Configuration_Config::clear_has_workingdir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Configuration_Config::clear_workingdir() {
  workingdir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_workingdir();
}
inline const ::std::string& Configuration_Config::workingdir() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.Config.WorkingDir)
  return workingdir_.GetNoArena();
}
inline void Configuration_Config::set_workingdir(const ::std::string& value) {
  set_has_workingdir();
  workingdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.Config.WorkingDir)
}
#if LANG_CXX11
inline void Configuration_Config::set_workingdir(::std::string&& value) {
  set_has_workingdir();
  workingdir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.Config.WorkingDir)
}
#endif
inline void Configuration_Config::set_workingdir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_workingdir();
  workingdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.Config.WorkingDir)
}
inline void Configuration_Config::set_workingdir(const char* value, size_t size) {
  set_has_workingdir();
  workingdir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.Config.WorkingDir)
}
inline ::std::string* Configuration_Config::mutable_workingdir() {
  set_has_workingdir();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.Config.WorkingDir)
  return workingdir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration_Config::release_workingdir() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.Config.WorkingDir)
  clear_has_workingdir();
  return workingdir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration_Config::set_allocated_workingdir(::std::string* workingdir) {
  if (workingdir != NULL) {
    set_has_workingdir();
  } else {
    clear_has_workingdir();
  }
  workingdir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workingdir);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.Config.WorkingDir)
}

// map<string, string> Labels = 8;
inline int Configuration_Config::labels_size() const {
  return labels_.size();
}
inline void Configuration_Config::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Configuration_Config::labels() const {
  // @@protoc_insertion_point(field_map:oci.spec.image.v1.Configuration.Config.Labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Configuration_Config::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:oci.spec.image.v1.Configuration.Config.Labels)
  return labels_.MutableMap();
}

// -------------------------------------------------------------------

// Configuration_History

// optional string created = 1;
inline bool Configuration_History::has_created() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Configuration_History::set_has_created() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Configuration_History::clear_has_created() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Configuration_History::clear_created() {
  created_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_created();
}
inline const ::std::string& Configuration_History::created() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.History.created)
  return created_.GetNoArena();
}
inline void Configuration_History::set_created(const ::std::string& value) {
  set_has_created();
  created_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.History.created)
}
#if LANG_CXX11
inline void Configuration_History::set_created(::std::string&& value) {
  set_has_created();
  created_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.History.created)
}
#endif
inline void Configuration_History::set_created(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_created();
  created_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.History.created)
}
inline void Configuration_History::set_created(const char* value, size_t size) {
  set_has_created();
  created_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.History.created)
}
inline ::std::string* Configuration_History::mutable_created() {
  set_has_created();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.History.created)
  return created_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration_History::release_created() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.History.created)
  clear_has_created();
  return created_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration_History::set_allocated_created(::std::string* created) {
  if (created != NULL) {
    set_has_created();
  } else {
    clear_has_created();
  }
  created_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), created);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.History.created)
}

// optional string author = 2;
inline bool Configuration_History::has_author() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Configuration_History::set_has_author() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Configuration_History::clear_has_author() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Configuration_History::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_author();
}
inline const ::std::string& Configuration_History::author() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.History.author)
  return author_.GetNoArena();
}
inline void Configuration_History::set_author(const ::std::string& value) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.History.author)
}
#if LANG_CXX11
inline void Configuration_History::set_author(::std::string&& value) {
  set_has_author();
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.History.author)
}
#endif
inline void Configuration_History::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.History.author)
}
inline void Configuration_History::set_author(const char* value, size_t size) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.History.author)
}
inline ::std::string* Configuration_History::mutable_author() {
  set_has_author();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.History.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration_History::release_author() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.History.author)
  clear_has_author();
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration_History::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    set_has_author();
  } else {
    clear_has_author();
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.History.author)
}

// optional string created_by = 3;
inline bool Configuration_History::has_created_by() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Configuration_History::set_has_created_by() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Configuration_History::clear_has_created_by() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Configuration_History::clear_created_by() {
  created_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_created_by();
}
inline const ::std::string& Configuration_History::created_by() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.History.created_by)
  return created_by_.GetNoArena();
}
inline void Configuration_History::set_created_by(const ::std::string& value) {
  set_has_created_by();
  created_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.History.created_by)
}
#if LANG_CXX11
inline void Configuration_History::set_created_by(::std::string&& value) {
  set_has_created_by();
  created_by_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.History.created_by)
}
#endif
inline void Configuration_History::set_created_by(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_created_by();
  created_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.History.created_by)
}
inline void Configuration_History::set_created_by(const char* value, size_t size) {
  set_has_created_by();
  created_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.History.created_by)
}
inline ::std::string* Configuration_History::mutable_created_by() {
  set_has_created_by();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.History.created_by)
  return created_by_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration_History::release_created_by() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.History.created_by)
  clear_has_created_by();
  return created_by_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration_History::set_allocated_created_by(::std::string* created_by) {
  if (created_by != NULL) {
    set_has_created_by();
  } else {
    clear_has_created_by();
  }
  created_by_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), created_by);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.History.created_by)
}

// optional string comment = 4;
inline bool Configuration_History::has_comment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Configuration_History::set_has_comment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Configuration_History::clear_has_comment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Configuration_History::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& Configuration_History::comment() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.History.comment)
  return comment_.GetNoArena();
}
inline void Configuration_History::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.History.comment)
}
#if LANG_CXX11
inline void Configuration_History::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.History.comment)
}
#endif
inline void Configuration_History::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.History.comment)
}
inline void Configuration_History::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.History.comment)
}
inline ::std::string* Configuration_History::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.History.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration_History::release_comment() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.History.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration_History::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.History.comment)
}

// optional bool empty_layer = 5;
inline bool Configuration_History::has_empty_layer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Configuration_History::set_has_empty_layer() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Configuration_History::clear_has_empty_layer() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Configuration_History::clear_empty_layer() {
  empty_layer_ = false;
  clear_has_empty_layer();
}
inline bool Configuration_History::empty_layer() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.History.empty_layer)
  return empty_layer_;
}
inline void Configuration_History::set_empty_layer(bool value) {
  set_has_empty_layer();
  empty_layer_ = value;
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.History.empty_layer)
}

// -------------------------------------------------------------------

// Configuration

// required string architecture = 1;
inline bool Configuration::has_architecture() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Configuration::set_has_architecture() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Configuration::clear_has_architecture() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Configuration::clear_architecture() {
  architecture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_architecture();
}
inline const ::std::string& Configuration::architecture() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.architecture)
  return architecture_.GetNoArena();
}
inline void Configuration::set_architecture(const ::std::string& value) {
  set_has_architecture();
  architecture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.architecture)
}
#if LANG_CXX11
inline void Configuration::set_architecture(::std::string&& value) {
  set_has_architecture();
  architecture_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.architecture)
}
#endif
inline void Configuration::set_architecture(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_architecture();
  architecture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.architecture)
}
inline void Configuration::set_architecture(const char* value, size_t size) {
  set_has_architecture();
  architecture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.architecture)
}
inline ::std::string* Configuration::mutable_architecture() {
  set_has_architecture();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.architecture)
  return architecture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_architecture() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.architecture)
  clear_has_architecture();
  return architecture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_architecture(::std::string* architecture) {
  if (architecture != NULL) {
    set_has_architecture();
  } else {
    clear_has_architecture();
  }
  architecture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), architecture);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.architecture)
}

// required string os = 2;
inline bool Configuration::has_os() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Configuration::set_has_os() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Configuration::clear_has_os() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Configuration::clear_os() {
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os();
}
inline const ::std::string& Configuration::os() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.os)
  return os_.GetNoArena();
}
inline void Configuration::set_os(const ::std::string& value) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.os)
}
#if LANG_CXX11
inline void Configuration::set_os(::std::string&& value) {
  set_has_os();
  os_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.os)
}
#endif
inline void Configuration::set_os(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.os)
}
inline void Configuration::set_os(const char* value, size_t size) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.os)
}
inline ::std::string* Configuration::mutable_os() {
  set_has_os();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.os)
  return os_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_os() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.os)
  clear_has_os();
  return os_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_os(::std::string* os) {
  if (os != NULL) {
    set_has_os();
  } else {
    clear_has_os();
  }
  os_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.os)
}

// required .oci.spec.image.v1.Configuration.Rootfs rootfs = 3;
inline bool Configuration::has_rootfs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Configuration::set_has_rootfs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Configuration::clear_has_rootfs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Configuration::clear_rootfs() {
  if (rootfs_ != NULL) rootfs_->Clear();
  clear_has_rootfs();
}
inline const ::oci::spec::image::v1::Configuration_Rootfs& Configuration::rootfs() const {
  const ::oci::spec::image::v1::Configuration_Rootfs* p = rootfs_;
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.rootfs)
  return p != NULL ? *p : *reinterpret_cast<const ::oci::spec::image::v1::Configuration_Rootfs*>(
      &::oci::spec::image::v1::_Configuration_Rootfs_default_instance_);
}
inline ::oci::spec::image::v1::Configuration_Rootfs* Configuration::release_rootfs() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.rootfs)
  clear_has_rootfs();
  ::oci::spec::image::v1::Configuration_Rootfs* temp = rootfs_;
  rootfs_ = NULL;
  return temp;
}
inline ::oci::spec::image::v1::Configuration_Rootfs* Configuration::mutable_rootfs() {
  set_has_rootfs();
  if (rootfs_ == NULL) {
    rootfs_ = new ::oci::spec::image::v1::Configuration_Rootfs;
  }
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.rootfs)
  return rootfs_;
}
inline void Configuration::set_allocated_rootfs(::oci::spec::image::v1::Configuration_Rootfs* rootfs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rootfs_;
  }
  if (rootfs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rootfs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rootfs, submessage_arena);
    }
    set_has_rootfs();
  } else {
    clear_has_rootfs();
  }
  rootfs_ = rootfs;
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.rootfs)
}

// optional string created = 4;
inline bool Configuration::has_created() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Configuration::set_has_created() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Configuration::clear_has_created() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Configuration::clear_created() {
  created_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_created();
}
inline const ::std::string& Configuration::created() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.created)
  return created_.GetNoArena();
}
inline void Configuration::set_created(const ::std::string& value) {
  set_has_created();
  created_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.created)
}
#if LANG_CXX11
inline void Configuration::set_created(::std::string&& value) {
  set_has_created();
  created_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.created)
}
#endif
inline void Configuration::set_created(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_created();
  created_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.created)
}
inline void Configuration::set_created(const char* value, size_t size) {
  set_has_created();
  created_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.created)
}
inline ::std::string* Configuration::mutable_created() {
  set_has_created();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.created)
  return created_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_created() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.created)
  clear_has_created();
  return created_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_created(::std::string* created) {
  if (created != NULL) {
    set_has_created();
  } else {
    clear_has_created();
  }
  created_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), created);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.created)
}

// optional string author = 5;
inline bool Configuration::has_author() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Configuration::set_has_author() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Configuration::clear_has_author() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Configuration::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_author();
}
inline const ::std::string& Configuration::author() const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.author)
  return author_.GetNoArena();
}
inline void Configuration::set_author(const ::std::string& value) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oci.spec.image.v1.Configuration.author)
}
#if LANG_CXX11
inline void Configuration::set_author(::std::string&& value) {
  set_has_author();
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oci.spec.image.v1.Configuration.author)
}
#endif
inline void Configuration::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oci.spec.image.v1.Configuration.author)
}
inline void Configuration::set_author(const char* value, size_t size) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oci.spec.image.v1.Configuration.author)
}
inline ::std::string* Configuration::mutable_author() {
  set_has_author();
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_author() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.author)
  clear_has_author();
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    set_has_author();
  } else {
    clear_has_author();
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.author)
}

// optional .oci.spec.image.v1.Configuration.Config config = 6;
inline bool Configuration::has_config() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Configuration::set_has_config() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Configuration::clear_has_config() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Configuration::clear_config() {
  if (config_ != NULL) config_->Clear();
  clear_has_config();
}
inline const ::oci::spec::image::v1::Configuration_Config& Configuration::config() const {
  const ::oci::spec::image::v1::Configuration_Config* p = config_;
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.config)
  return p != NULL ? *p : *reinterpret_cast<const ::oci::spec::image::v1::Configuration_Config*>(
      &::oci::spec::image::v1::_Configuration_Config_default_instance_);
}
inline ::oci::spec::image::v1::Configuration_Config* Configuration::release_config() {
  // @@protoc_insertion_point(field_release:oci.spec.image.v1.Configuration.config)
  clear_has_config();
  ::oci::spec::image::v1::Configuration_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::oci::spec::image::v1::Configuration_Config* Configuration::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    config_ = new ::oci::spec::image::v1::Configuration_Config;
  }
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.config)
  return config_;
}
inline void Configuration::set_allocated_config(::oci::spec::image::v1::Configuration_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
  } else {
    clear_has_config();
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:oci.spec.image.v1.Configuration.config)
}

// repeated .oci.spec.image.v1.Configuration.History history = 7;
inline int Configuration::history_size() const {
  return history_.size();
}
inline void Configuration::clear_history() {
  history_.Clear();
}
inline const ::oci::spec::image::v1::Configuration_History& Configuration::history(int index) const {
  // @@protoc_insertion_point(field_get:oci.spec.image.v1.Configuration.history)
  return history_.Get(index);
}
inline ::oci::spec::image::v1::Configuration_History* Configuration::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:oci.spec.image.v1.Configuration.history)
  return history_.Mutable(index);
}
inline ::oci::spec::image::v1::Configuration_History* Configuration::add_history() {
  // @@protoc_insertion_point(field_add:oci.spec.image.v1.Configuration.history)
  return history_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Configuration_History >*
Configuration::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:oci.spec.image.v1.Configuration.history)
  return &history_;
}
inline const ::google::protobuf::RepeatedPtrField< ::oci::spec::image::v1::Configuration_History >&
Configuration::history() const {
  // @@protoc_insertion_point(field_list:oci.spec.image.v1.Configuration.history)
  return history_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace image
}  // namespace spec
}  // namespace oci

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mesos_2foci_2fspec_2eproto__INCLUDED
